//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace POS.Entity.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class POSEntities : DbContext
    {
        public POSEntities()
            : base("name=POSEntities")
        {
            this.Database.CommandTimeout = 1 * 60;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUserRole> AspNetUserRoles { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<tbl_Category> tbl_Category { get; set; }
        public virtual DbSet<tbl_City> tbl_City { get; set; }
        public virtual DbSet<tbl_Company> tbl_Company { get; set; }
        public virtual DbSet<tbl_Country> tbl_Country { get; set; }
        public virtual DbSet<tbl_Customer> tbl_Customer { get; set; }
        public virtual DbSet<tbl_CustType> tbl_CustType { get; set; }
        public virtual DbSet<tbl_EnquiryAuthentication> tbl_EnquiryAuthentication { get; set; }
        public virtual DbSet<tbl_EODFile> tbl_EODFile { get; set; }
        public virtual DbSet<tbl_ImageDetails> tbl_ImageDetails { get; set; }
        public virtual DbSet<tbl_Location> tbl_Location { get; set; }
        public virtual DbSet<tbl_LocationAuthentication> tbl_LocationAuthentication { get; set; }
        public virtual DbSet<tbl_LocationPrice> tbl_LocationPrice { get; set; }
        public virtual DbSet<tbl_LocationPrice_Temp> tbl_LocationPrice_Temp { get; set; }
        public virtual DbSet<tbl_ManagerUserAuthentication> tbl_ManagerUserAuthentication { get; set; }
        public virtual DbSet<tbl_MasterDataAuthentication> tbl_MasterDataAuthentication { get; set; }
        public virtual DbSet<tbl_Material> tbl_Material { get; set; }
        public virtual DbSet<tbl_Material_Temp> tbl_Material_Temp { get; set; }
        public virtual DbSet<tbl_MaterialEAN> tbl_MaterialEAN { get; set; }
        public virtual DbSet<tbl_MaterialEAN_Temp> tbl_MaterialEAN_Temp { get; set; }
        public virtual DbSet<tbl_MaterialKit> tbl_MaterialKit { get; set; }
        public virtual DbSet<tbl_PhoneCode> tbl_PhoneCode { get; set; }
        public virtual DbSet<tbl_PI_TimeTable> tbl_PI_TimeTable { get; set; }
        public virtual DbSet<tbl_POS_Logs> tbl_POS_Logs { get; set; }
        public virtual DbSet<tbl_POSException> tbl_POSException { get; set; }
        public virtual DbSet<tbl_PreferUOM> tbl_PreferUOM { get; set; }
        public virtual DbSet<tbl_PreferUOM_Temp> tbl_PreferUOM_Temp { get; set; }
        public virtual DbSet<tbl_PriceFile> tbl_PriceFile { get; set; }
        public virtual DbSet<tbl_PriceFile_Temp> tbl_PriceFile_Temp { get; set; }
        public virtual DbSet<tbl_ProductionOrder> tbl_ProductionOrder { get; set; }
        public virtual DbSet<tbl_ProductionOrder_Detail> tbl_ProductionOrder_Detail { get; set; }
        public virtual DbSet<tbl_ProductionOrderRequest> tbl_ProductionOrderRequest { get; set; }
        public virtual DbSet<tbl_ProductionOrderRequest_Detail> tbl_ProductionOrderRequest_Detail { get; set; }
        public virtual DbSet<tbl_PurchaseOrder> tbl_PurchaseOrder { get; set; }
        public virtual DbSet<tbl_PurchaseOrder_Detail> tbl_PurchaseOrder_Detail { get; set; }
        public virtual DbSet<tbl_Region> tbl_Region { get; set; }
        public virtual DbSet<tbl_SetupAuthentication> tbl_SetupAuthentication { get; set; }
        public virtual DbSet<tbl_StockReceive> tbl_StockReceive { get; set; }
        public virtual DbSet<tbl_StockReceive_Detail> tbl_StockReceive_Detail { get; set; }
        public virtual DbSet<tbl_TempDetail> tbl_TempDetail { get; set; }
        public virtual DbSet<tbl_TempMaster> tbl_TempMaster { get; set; }
        public virtual DbSet<tbl_Terminal> tbl_Terminal { get; set; }
        public virtual DbSet<tbl_TransferIN> tbl_TransferIN { get; set; }
        public virtual DbSet<tbl_TransferIN_Detail> tbl_TransferIN_Detail { get; set; }
        public virtual DbSet<tbl_TransferOut> tbl_TransferOut { get; set; }
        public virtual DbSet<tbl_TransferOut_Detail> tbl_TransferOut_Detail { get; set; }
        public virtual DbSet<tbl_TrasactionsAuthentication> tbl_TrasactionsAuthentication { get; set; }
        public virtual DbSet<tbl_UOM> tbl_UOM { get; set; }
        public virtual DbSet<tbl_Users> tbl_Users { get; set; }
        public virtual DbSet<tbl_Vendor> tbl_Vendor { get; set; }
        public virtual DbSet<tbl_WebUsers> tbl_WebUsers { get; set; }
        public virtual DbSet<tbl_TransfterDisplayDateTime> tbl_TransfterDisplayDateTime { get; set; }
        public virtual DbSet<tbl_EOD> tbl_EOD { get; set; }
        public virtual DbSet<tbl_Storage> tbl_Storage { get; set; }
        public virtual DbSet<tbl_SubCategory> tbl_SubCategory { get; set; }
    
        [DbFunction("POSEntities", "CSVToTable")]
        public virtual IQueryable<CSVToTable_Result> CSVToTable(string inStr)
        {
            var inStrParameter = inStr != null ?
                new ObjectParameter("InStr", inStr) :
                new ObjectParameter("InStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CSVToTable_Result>("[POSEntities].[CSVToTable](@InStr)", inStrParameter);
        }
    
        [DbFunction("POSEntities", "f_split")]
        public virtual IQueryable<f_split_Result> f_split(string param, string delimiter)
        {
            var paramParameter = param != null ?
                new ObjectParameter("param", param) :
                new ObjectParameter("param", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<f_split_Result>("[POSEntities].[f_split](@param, @delimiter)", paramParameter, delimiterParameter);
        }
    
        [DbFunction("POSEntities", "fun_LocationSplit")]
        public virtual IQueryable<fun_LocationSplit_Result> fun_LocationSplit(string locationIDs, string delimeter)
        {
            var locationIDsParameter = locationIDs != null ?
                new ObjectParameter("LocationIDs", locationIDs) :
                new ObjectParameter("LocationIDs", typeof(string));
    
            var delimeterParameter = delimeter != null ?
                new ObjectParameter("Delimeter", delimeter) :
                new ObjectParameter("Delimeter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fun_LocationSplit_Result>("[POSEntities].[fun_LocationSplit](@LocationIDs, @Delimeter)", locationIDsParameter, delimeterParameter);
        }
    
        public virtual ObjectResult<Proc_AllDocumentPrint_Result> Proc_AllDocumentPrint(string filterName, string dOCID)
        {
            var filterNameParameter = filterName != null ?
                new ObjectParameter("FilterName", filterName) :
                new ObjectParameter("FilterName", typeof(string));
    
            var dOCIDParameter = dOCID != null ?
                new ObjectParameter("DOCID", dOCID) :
                new ObjectParameter("DOCID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_AllDocumentPrint_Result>("Proc_AllDocumentPrint", filterNameParameter, dOCIDParameter);
        }
    
        public virtual ObjectResult<Proc_AspNetManagerLocations_Result> Proc_AspNetManagerLocations(string emailID)
        {
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_AspNetManagerLocations_Result>("Proc_AspNetManagerLocations", emailIDParameter);
        }
    
        public virtual ObjectResult<Proc_AspNetUsersLocations_Result> Proc_AspNetUsersLocations(string emailID)
        {
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_AspNetUsersLocations_Result>("Proc_AspNetUsersLocations", emailIDParameter);
        }
    
        public virtual ObjectResult<Proc_CashCollection_Result> Proc_CashCollection(string locationID, string fromDate, string toDate)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_CashCollection_Result>("Proc_CashCollection", locationIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Proc_DeactiveCustomerRegistration(string customerID)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_DeactiveCustomerRegistration", customerIDParameter);
        }
    
        public virtual int Proc_DeleteMasterCategory(string categoryID)
        {
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_DeleteMasterCategory", categoryIDParameter);
        }
    
        public virtual int Proc_DeleteMasterLocation(string locationId)
        {
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_DeleteMasterLocation", locationIdParameter);
        }
    
        public virtual int Proc_DeleteMasterMaterial(string materialId)
        {
            var materialIdParameter = materialId != null ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_DeleteMasterMaterial", materialIdParameter);
        }
    
        public virtual int Proc_DeleteMasterStorage(string storageId, string locationID)
        {
            var storageIdParameter = storageId != null ?
                new ObjectParameter("StorageId", storageId) :
                new ObjectParameter("StorageId", typeof(string));
    
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_DeleteMasterStorage", storageIdParameter, locationIDParameter);
        }
    
        public virtual int Proc_DeleteMasterSubCategory(string categoryID, string subCategoryId)
        {
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            var subCategoryIdParameter = subCategoryId != null ?
                new ObjectParameter("SubCategoryId", subCategoryId) :
                new ObjectParameter("SubCategoryId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_DeleteMasterSubCategory", categoryIDParameter, subCategoryIdParameter);
        }
    
        public virtual int Proc_DeleteMasterTerminal(string locationID, string terminalId)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var terminalIdParameter = terminalId != null ?
                new ObjectParameter("TerminalId", terminalId) :
                new ObjectParameter("TerminalId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_DeleteMasterTerminal", locationIDParameter, terminalIdParameter);
        }
    
        public virtual int Proc_DeleteMasterVendor(string vendorId)
        {
            var vendorIdParameter = vendorId != null ?
                new ObjectParameter("vendorId", vendorId) :
                new ObjectParameter("vendorId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_DeleteMasterVendor", vendorIdParameter);
        }
    
        public virtual int Proc_DeleteProductionOrderRequest_Detail(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_DeleteProductionOrderRequest_Detail", idParameter);
        }
    
        public virtual ObjectResult<Proc_DocumentdetailsTenderDetails_Result> Proc_DocumentdetailsTenderDetails(string documentID)
        {
            var documentIDParameter = documentID != null ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_DocumentdetailsTenderDetails_Result>("Proc_DocumentdetailsTenderDetails", documentIDParameter);
        }
    
        public virtual ObjectResult<Proc_EodByIdFile_Result> Proc_EodByIdFile(string eODID)
        {
            var eODIDParameter = eODID != null ?
                new ObjectParameter("EODID", eODID) :
                new ObjectParameter("EODID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_EodByIdFile_Result>("Proc_EodByIdFile", eODIDParameter);
        }
    
        public virtual int Proc_ExecMasterMaterial(string materialId, string baseUOM, string materialMix, string price, string eAN13, string uOM, string convertvalue)
        {
            var materialIdParameter = materialId != null ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(string));
    
            var baseUOMParameter = baseUOM != null ?
                new ObjectParameter("BaseUOM", baseUOM) :
                new ObjectParameter("BaseUOM", typeof(string));
    
            var materialMixParameter = materialMix != null ?
                new ObjectParameter("MaterialMix", materialMix) :
                new ObjectParameter("MaterialMix", typeof(string));
    
            var priceParameter = price != null ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(string));
    
            var eAN13Parameter = eAN13 != null ?
                new ObjectParameter("EAN13", eAN13) :
                new ObjectParameter("EAN13", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var convertvalueParameter = convertvalue != null ?
                new ObjectParameter("Convertvalue", convertvalue) :
                new ObjectParameter("Convertvalue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_ExecMasterMaterial", materialIdParameter, baseUOMParameter, materialMixParameter, priceParameter, eAN13Parameter, uOMParameter, convertvalueParameter);
        }
    
        public virtual ObjectResult<Proc_FilterPOReceive_Result> Proc_FilterPOReceive(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string terminalIDs, string materialID, string eAN, string category, string subCategory, string userID, string amountFrom, string amountTo, string location)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            var terminalIDsParameter = terminalIDs != null ?
                new ObjectParameter("TerminalIDs", terminalIDs) :
                new ObjectParameter("TerminalIDs", typeof(string));
    
            var materialIDParameter = materialID != null ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(string));
    
            var eANParameter = eAN != null ?
                new ObjectParameter("EAN", eAN) :
                new ObjectParameter("EAN", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var subCategoryParameter = subCategory != null ?
                new ObjectParameter("SubCategory", subCategory) :
                new ObjectParameter("SubCategory", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var amountFromParameter = amountFrom != null ?
                new ObjectParameter("AmountFrom", amountFrom) :
                new ObjectParameter("AmountFrom", typeof(string));
    
            var amountToParameter = amountTo != null ?
                new ObjectParameter("AmountTo", amountTo) :
                new ObjectParameter("AmountTo", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_FilterPOReceive_Result>("Proc_FilterPOReceive", dateFromParameter, dateToParameter, terminalIDsParameter, materialIDParameter, eANParameter, categoryParameter, subCategoryParameter, userIDParameter, amountFromParameter, amountToParameter, locationParameter);
        }
    
        public virtual ObjectResult<Proc_FilterReturnORTransferORPhysicalORTransInORTransOUT_Result> Proc_FilterReturnORTransferORPhysicalORTransInORTransOUT(string filterName, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string terminalIDs, string materialID, string eAN, string category, string subCategory, string userID, string amountFrom, string amountTo, string location)
        {
            var filterNameParameter = filterName != null ?
                new ObjectParameter("FilterName", filterName) :
                new ObjectParameter("FilterName", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            var terminalIDsParameter = terminalIDs != null ?
                new ObjectParameter("TerminalIDs", terminalIDs) :
                new ObjectParameter("TerminalIDs", typeof(string));
    
            var materialIDParameter = materialID != null ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(string));
    
            var eANParameter = eAN != null ?
                new ObjectParameter("EAN", eAN) :
                new ObjectParameter("EAN", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var subCategoryParameter = subCategory != null ?
                new ObjectParameter("SubCategory", subCategory) :
                new ObjectParameter("SubCategory", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var amountFromParameter = amountFrom != null ?
                new ObjectParameter("AmountFrom", amountFrom) :
                new ObjectParameter("AmountFrom", typeof(string));
    
            var amountToParameter = amountTo != null ?
                new ObjectParameter("AmountTo", amountTo) :
                new ObjectParameter("AmountTo", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_FilterReturnORTransferORPhysicalORTransInORTransOUT_Result>("Proc_FilterReturnORTransferORPhysicalORTransInORTransOUT", filterNameParameter, dateFromParameter, dateToParameter, terminalIDsParameter, materialIDParameter, eANParameter, categoryParameter, subCategoryParameter, userIDParameter, amountFromParameter, amountToParameter, locationParameter);
        }
    
        public virtual ObjectResult<Proc_GetAllLTerminal_Result> Proc_GetAllLTerminal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_GetAllLTerminal_Result>("Proc_GetAllLTerminal");
        }
    
        public virtual ObjectResult<Proc_GetMasterCategory_Result> Proc_GetMasterCategory(string categoryID)
        {
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_GetMasterCategory_Result>("Proc_GetMasterCategory", categoryIDParameter);
        }
    
        public virtual ObjectResult<Proc_GetMasterMaterial_Result> Proc_GetMasterMaterial(string materialId)
        {
            var materialIdParameter = materialId != null ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_GetMasterMaterial_Result>("Proc_GetMasterMaterial", materialIdParameter);
        }
    
        public virtual ObjectResult<Proc_GetMasterStorage_Result> Proc_GetMasterStorage(string storageId, string locationID)
        {
            var storageIdParameter = storageId != null ?
                new ObjectParameter("StorageId", storageId) :
                new ObjectParameter("StorageId", typeof(string));
    
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_GetMasterStorage_Result>("Proc_GetMasterStorage", storageIdParameter, locationIDParameter);
        }
    
        public virtual ObjectResult<Proc_GetMasterTerminal_Result> Proc_GetMasterTerminal(string locationID)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_GetMasterTerminal_Result>("Proc_GetMasterTerminal", locationIDParameter);
        }
    
        public virtual ObjectResult<Proc_GetMasterVendor_Result> Proc_GetMasterVendor(string vendorId)
        {
            var vendorIdParameter = vendorId != null ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_GetMasterVendor_Result>("Proc_GetMasterVendor", vendorIdParameter);
        }
    
        public virtual ObjectResult<Proc_GetmaterialById_Result> Proc_GetmaterialById(string materialID)
        {
            var materialIDParameter = materialID != null ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_GetmaterialById_Result>("Proc_GetmaterialById", materialIDParameter);
        }
    
        public virtual int Proc_InsertCustomerRegistration(string customerID, string firstName, string lastName, string address, string pOBox, string phone, string fax, string email, string city, string region, string country, string creditLimit, string custType, Nullable<bool> status, string password, string gender, string dateOfBirth)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var pOBoxParameter = pOBox != null ?
                new ObjectParameter("POBox", pOBox) :
                new ObjectParameter("POBox", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var creditLimitParameter = creditLimit != null ?
                new ObjectParameter("CreditLimit", creditLimit) :
                new ObjectParameter("CreditLimit", typeof(string));
    
            var custTypeParameter = custType != null ?
                new ObjectParameter("CustType", custType) :
                new ObjectParameter("CustType", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth != null ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_InsertCustomerRegistration", customerIDParameter, firstNameParameter, lastNameParameter, addressParameter, pOBoxParameter, phoneParameter, faxParameter, emailParameter, cityParameter, regionParameter, countryParameter, creditLimitParameter, custTypeParameter, statusParameter, passwordParameter, genderParameter, dateOfBirthParameter);
        }
    
        public virtual int Proc_InsertEODFile(string companyId, string locationId, string terminalId, string eodid, byte[] fileByte)
        {
            var companyIdParameter = companyId != null ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(string));
    
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            var terminalIdParameter = terminalId != null ?
                new ObjectParameter("TerminalId", terminalId) :
                new ObjectParameter("TerminalId", typeof(string));
    
            var eodidParameter = eodid != null ?
                new ObjectParameter("Eodid", eodid) :
                new ObjectParameter("Eodid", typeof(string));
    
            var fileByteParameter = fileByte != null ?
                new ObjectParameter("FileByte", fileByte) :
                new ObjectParameter("FileByte", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_InsertEODFile", companyIdParameter, locationIdParameter, terminalIdParameter, eodidParameter, fileByteParameter);
        }
    
        public virtual int Proc_InsertMasterCategory(string categoryID, string categoryDesc)
        {
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            var categoryDescParameter = categoryDesc != null ?
                new ObjectParameter("CategoryDesc", categoryDesc) :
                new ObjectParameter("CategoryDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_InsertMasterCategory", categoryIDParameter, categoryDescParameter);
        }
    
        public virtual int Proc_InsertMasterLocation(string locationID, string costCenter, string name, string address1, string address2, string address3, string pOBOX, string postalCode, string city, string region, string country, string contactPerson, string telePhone, string fax, string lan, Nullable<decimal> loanAmount)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("CostCenter", costCenter) :
                new ObjectParameter("CostCenter", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var address3Parameter = address3 != null ?
                new ObjectParameter("Address3", address3) :
                new ObjectParameter("Address3", typeof(string));
    
            var pOBOXParameter = pOBOX != null ?
                new ObjectParameter("POBOX", pOBOX) :
                new ObjectParameter("POBOX", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var contactPersonParameter = contactPerson != null ?
                new ObjectParameter("ContactPerson", contactPerson) :
                new ObjectParameter("ContactPerson", typeof(string));
    
            var telePhoneParameter = telePhone != null ?
                new ObjectParameter("TelePhone", telePhone) :
                new ObjectParameter("TelePhone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var lanParameter = lan != null ?
                new ObjectParameter("Lan", lan) :
                new ObjectParameter("Lan", typeof(string));
    
            var loanAmountParameter = loanAmount.HasValue ?
                new ObjectParameter("LoanAmount", loanAmount) :
                new ObjectParameter("LoanAmount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_InsertMasterLocation", locationIDParameter, costCenterParameter, nameParameter, address1Parameter, address2Parameter, address3Parameter, pOBOXParameter, postalCodeParameter, cityParameter, regionParameter, countryParameter, contactPersonParameter, telePhoneParameter, faxParameter, lanParameter, loanAmountParameter);
        }
    
        public virtual int Proc_InsertMasterMaterial(string materialId, string materialDesc, string materialDescArbirc, string categoryId, string subCategory, string url, string vendorId, string baseUOM, Nullable<decimal> cost, string userId)
        {
            var materialIdParameter = materialId != null ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(string));
    
            var materialDescParameter = materialDesc != null ?
                new ObjectParameter("MaterialDesc", materialDesc) :
                new ObjectParameter("MaterialDesc", typeof(string));
    
            var materialDescArbircParameter = materialDescArbirc != null ?
                new ObjectParameter("MaterialDescArbirc", materialDescArbirc) :
                new ObjectParameter("MaterialDescArbirc", typeof(string));
    
            var categoryIdParameter = categoryId != null ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(string));
    
            var subCategoryParameter = subCategory != null ?
                new ObjectParameter("SubCategory", subCategory) :
                new ObjectParameter("SubCategory", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var vendorIdParameter = vendorId != null ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(string));
    
            var baseUOMParameter = baseUOM != null ?
                new ObjectParameter("BaseUOM", baseUOM) :
                new ObjectParameter("BaseUOM", typeof(string));
    
            var costParameter = cost.HasValue ?
                new ObjectParameter("Cost", cost) :
                new ObjectParameter("Cost", typeof(decimal));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_InsertMasterMaterial", materialIdParameter, materialDescParameter, materialDescArbircParameter, categoryIdParameter, subCategoryParameter, urlParameter, vendorIdParameter, baseUOMParameter, costParameter, userIdParameter);
        }
    
        public virtual int Proc_InsertMasterMaterialEAN(string materialId, string eAN13, string uOM, string convertvalue, string baseUOM, string materialMix)
        {
            var materialIdParameter = materialId != null ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(string));
    
            var eAN13Parameter = eAN13 != null ?
                new ObjectParameter("EAN13", eAN13) :
                new ObjectParameter("EAN13", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var convertvalueParameter = convertvalue != null ?
                new ObjectParameter("Convertvalue", convertvalue) :
                new ObjectParameter("Convertvalue", typeof(string));
    
            var baseUOMParameter = baseUOM != null ?
                new ObjectParameter("BaseUOM", baseUOM) :
                new ObjectParameter("BaseUOM", typeof(string));
    
            var materialMixParameter = materialMix != null ?
                new ObjectParameter("MaterialMix", materialMix) :
                new ObjectParameter("MaterialMix", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_InsertMasterMaterialEAN", materialIdParameter, eAN13Parameter, uOMParameter, convertvalueParameter, baseUOMParameter, materialMixParameter);
        }
    
        public virtual int Proc_InsertMasterPreferUOM(string materialId, string eAN13, string uOM, string conv)
        {
            var materialIdParameter = materialId != null ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(string));
    
            var eAN13Parameter = eAN13 != null ?
                new ObjectParameter("EAN13", eAN13) :
                new ObjectParameter("EAN13", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var convParameter = conv != null ?
                new ObjectParameter("Conv", conv) :
                new ObjectParameter("Conv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_InsertMasterPreferUOM", materialIdParameter, eAN13Parameter, uOMParameter, convParameter);
        }
    
        public virtual int Proc_InsertMasterPriceFile(string materialId, string eAN13, string uOM, string price)
        {
            var materialIdParameter = materialId != null ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(string));
    
            var eAN13Parameter = eAN13 != null ?
                new ObjectParameter("EAN13", eAN13) :
                new ObjectParameter("EAN13", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var priceParameter = price != null ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_InsertMasterPriceFile", materialIdParameter, eAN13Parameter, uOMParameter, priceParameter);
        }
    
        public virtual int Proc_InsertMasterStorage(string storageId, string storageName, string locationID)
        {
            var storageIdParameter = storageId != null ?
                new ObjectParameter("StorageId", storageId) :
                new ObjectParameter("StorageId", typeof(string));
    
            var storageNameParameter = storageName != null ?
                new ObjectParameter("StorageName", storageName) :
                new ObjectParameter("StorageName", typeof(string));
    
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_InsertMasterStorage", storageIdParameter, storageNameParameter, locationIDParameter);
        }
    
        public virtual int Proc_InsertMasterSubCategory(string categoryID, string subCategoryName, string subCategoryId)
        {
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            var subCategoryNameParameter = subCategoryName != null ?
                new ObjectParameter("SubCategoryName", subCategoryName) :
                new ObjectParameter("SubCategoryName", typeof(string));
    
            var subCategoryIdParameter = subCategoryId != null ?
                new ObjectParameter("SubCategoryId", subCategoryId) :
                new ObjectParameter("SubCategoryId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_InsertMasterSubCategory", categoryIDParameter, subCategoryNameParameter, subCategoryIdParameter);
        }
    
        public virtual int Proc_InsertMasterTerminal(string locationID, string terminalId)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var terminalIdParameter = terminalId != null ?
                new ObjectParameter("TerminalId", terminalId) :
                new ObjectParameter("TerminalId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_InsertMasterTerminal", locationIDParameter, terminalIdParameter);
        }
    
        public virtual int Proc_InsertMasterVendor(string vendorID, string name, string address1, string address2, string address3, string pOBOX, string postalCode, string city, string region, string country, string contactPerson, string telePhone, string fax, string lan)
        {
            var vendorIDParameter = vendorID != null ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var address3Parameter = address3 != null ?
                new ObjectParameter("Address3", address3) :
                new ObjectParameter("Address3", typeof(string));
    
            var pOBOXParameter = pOBOX != null ?
                new ObjectParameter("POBOX", pOBOX) :
                new ObjectParameter("POBOX", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var contactPersonParameter = contactPerson != null ?
                new ObjectParameter("ContactPerson", contactPerson) :
                new ObjectParameter("ContactPerson", typeof(string));
    
            var telePhoneParameter = telePhone != null ?
                new ObjectParameter("TelePhone", telePhone) :
                new ObjectParameter("TelePhone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var lanParameter = lan != null ?
                new ObjectParameter("Lan", lan) :
                new ObjectParameter("Lan", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_InsertMasterVendor", vendorIDParameter, nameParameter, address1Parameter, address2Parameter, address3Parameter, pOBOXParameter, postalCodeParameter, cityParameter, regionParameter, countryParameter, contactPersonParameter, telePhoneParameter, faxParameter, lanParameter);
        }
    
        public virtual int Proc_InsertOrderDetails(string documentID, string companyID, string locationID, string storageID, string terminalID, Nullable<System.DateTime> documentDate, string postingType, Nullable<System.DateTime> postingDate, string customerID, Nullable<int> counter, string categoryID, string materialID, string uOM, Nullable<decimal> tranQty, Nullable<decimal> baseQty, Nullable<decimal> creditQty, Nullable<decimal> cost, Nullable<decimal> price, Nullable<decimal> discountRate, Nullable<decimal> amount, Nullable<decimal> creditAmount, string userID, Nullable<int> postKey, Nullable<System.DateTime> addDate, Nullable<System.DateTime> updDate)
        {
            var documentIDParameter = documentID != null ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var storageIDParameter = storageID != null ?
                new ObjectParameter("StorageID", storageID) :
                new ObjectParameter("StorageID", typeof(string));
    
            var terminalIDParameter = terminalID != null ?
                new ObjectParameter("TerminalID", terminalID) :
                new ObjectParameter("TerminalID", typeof(string));
    
            var documentDateParameter = documentDate.HasValue ?
                new ObjectParameter("DocumentDate", documentDate) :
                new ObjectParameter("DocumentDate", typeof(System.DateTime));
    
            var postingTypeParameter = postingType != null ?
                new ObjectParameter("PostingType", postingType) :
                new ObjectParameter("PostingType", typeof(string));
    
            var postingDateParameter = postingDate.HasValue ?
                new ObjectParameter("PostingDate", postingDate) :
                new ObjectParameter("PostingDate", typeof(System.DateTime));
    
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            var counterParameter = counter.HasValue ?
                new ObjectParameter("Counter", counter) :
                new ObjectParameter("Counter", typeof(int));
    
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            var materialIDParameter = materialID != null ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var tranQtyParameter = tranQty.HasValue ?
                new ObjectParameter("TranQty", tranQty) :
                new ObjectParameter("TranQty", typeof(decimal));
    
            var baseQtyParameter = baseQty.HasValue ?
                new ObjectParameter("BaseQty", baseQty) :
                new ObjectParameter("BaseQty", typeof(decimal));
    
            var creditQtyParameter = creditQty.HasValue ?
                new ObjectParameter("CreditQty", creditQty) :
                new ObjectParameter("CreditQty", typeof(decimal));
    
            var costParameter = cost.HasValue ?
                new ObjectParameter("Cost", cost) :
                new ObjectParameter("Cost", typeof(decimal));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var discountRateParameter = discountRate.HasValue ?
                new ObjectParameter("DiscountRate", discountRate) :
                new ObjectParameter("DiscountRate", typeof(decimal));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var creditAmountParameter = creditAmount.HasValue ?
                new ObjectParameter("CreditAmount", creditAmount) :
                new ObjectParameter("CreditAmount", typeof(decimal));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var postKeyParameter = postKey.HasValue ?
                new ObjectParameter("PostKey", postKey) :
                new ObjectParameter("PostKey", typeof(int));
    
            var addDateParameter = addDate.HasValue ?
                new ObjectParameter("AddDate", addDate) :
                new ObjectParameter("AddDate", typeof(System.DateTime));
    
            var updDateParameter = updDate.HasValue ?
                new ObjectParameter("UpdDate", updDate) :
                new ObjectParameter("UpdDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_InsertOrderDetails", documentIDParameter, companyIDParameter, locationIDParameter, storageIDParameter, terminalIDParameter, documentDateParameter, postingTypeParameter, postingDateParameter, customerIDParameter, counterParameter, categoryIDParameter, materialIDParameter, uOMParameter, tranQtyParameter, baseQtyParameter, creditQtyParameter, costParameter, priceParameter, discountRateParameter, amountParameter, creditAmountParameter, userIDParameter, postKeyParameter, addDateParameter, updDateParameter);
        }
    
        public virtual int Proc_InsertRtnSupplier(string documentID, string pONumber, string companyID, string locationID, string storageID, string documentDate, Nullable<System.DateTime> postingDate, string userID, Nullable<System.DateTime> addDate, string vendorId, string docDetail)
        {
            var documentIDParameter = documentID != null ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(string));
    
            var pONumberParameter = pONumber != null ?
                new ObjectParameter("PONumber", pONumber) :
                new ObjectParameter("PONumber", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var storageIDParameter = storageID != null ?
                new ObjectParameter("StorageID", storageID) :
                new ObjectParameter("StorageID", typeof(string));
    
            var documentDateParameter = documentDate != null ?
                new ObjectParameter("DocumentDate", documentDate) :
                new ObjectParameter("DocumentDate", typeof(string));
    
            var postingDateParameter = postingDate.HasValue ?
                new ObjectParameter("PostingDate", postingDate) :
                new ObjectParameter("PostingDate", typeof(System.DateTime));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var addDateParameter = addDate.HasValue ?
                new ObjectParameter("AddDate", addDate) :
                new ObjectParameter("AddDate", typeof(System.DateTime));
    
            var vendorIdParameter = vendorId != null ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(string));
    
            var docDetailParameter = docDetail != null ?
                new ObjectParameter("DocDetail", docDetail) :
                new ObjectParameter("DocDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_InsertRtnSupplier", documentIDParameter, pONumberParameter, companyIDParameter, locationIDParameter, storageIDParameter, documentDateParameter, postingDateParameter, userIDParameter, addDateParameter, vendorIdParameter, docDetailParameter);
        }
    
        public virtual int Proc_InsertRtnSupplier_Details(string documentID, string companyID, string locationID, Nullable<System.DateTime> documentDate, Nullable<System.DateTime> postingDate, Nullable<System.DateTime> addDate, Nullable<System.DateTime> updDate, string materialId, string uOM, string tranQty, string baseQty, string categoryId, string userID, Nullable<decimal> convertFactor, string storageId, string postKey, string materialMix, string vendorId, string amount)
        {
            var documentIDParameter = documentID != null ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var documentDateParameter = documentDate.HasValue ?
                new ObjectParameter("DocumentDate", documentDate) :
                new ObjectParameter("DocumentDate", typeof(System.DateTime));
    
            var postingDateParameter = postingDate.HasValue ?
                new ObjectParameter("PostingDate", postingDate) :
                new ObjectParameter("PostingDate", typeof(System.DateTime));
    
            var addDateParameter = addDate.HasValue ?
                new ObjectParameter("AddDate", addDate) :
                new ObjectParameter("AddDate", typeof(System.DateTime));
    
            var updDateParameter = updDate.HasValue ?
                new ObjectParameter("UpdDate", updDate) :
                new ObjectParameter("UpdDate", typeof(System.DateTime));
    
            var materialIdParameter = materialId != null ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var tranQtyParameter = tranQty != null ?
                new ObjectParameter("TranQty", tranQty) :
                new ObjectParameter("TranQty", typeof(string));
    
            var baseQtyParameter = baseQty != null ?
                new ObjectParameter("BaseQty", baseQty) :
                new ObjectParameter("BaseQty", typeof(string));
    
            var categoryIdParameter = categoryId != null ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var convertFactorParameter = convertFactor.HasValue ?
                new ObjectParameter("ConvertFactor", convertFactor) :
                new ObjectParameter("ConvertFactor", typeof(decimal));
    
            var storageIdParameter = storageId != null ?
                new ObjectParameter("StorageId", storageId) :
                new ObjectParameter("StorageId", typeof(string));
    
            var postKeyParameter = postKey != null ?
                new ObjectParameter("PostKey", postKey) :
                new ObjectParameter("PostKey", typeof(string));
    
            var materialMixParameter = materialMix != null ?
                new ObjectParameter("MaterialMix", materialMix) :
                new ObjectParameter("MaterialMix", typeof(string));
    
            var vendorIdParameter = vendorId != null ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(string));
    
            var amountParameter = amount != null ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_InsertRtnSupplier_Details", documentIDParameter, companyIDParameter, locationIDParameter, documentDateParameter, postingDateParameter, addDateParameter, updDateParameter, materialIdParameter, uOMParameter, tranQtyParameter, baseQtyParameter, categoryIdParameter, userIDParameter, convertFactorParameter, storageIdParameter, postKeyParameter, materialMixParameter, vendorIdParameter, amountParameter);
        }
    
        public virtual int Proc_InsertSalesCategory(string documentId, string categoryName, string userName, string amount, string date, string companyId, string terminalId, string locationId)
        {
            var documentIdParameter = documentId != null ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(string));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var amountParameter = amount != null ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(string));
    
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var companyIdParameter = companyId != null ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(string));
    
            var terminalIdParameter = terminalId != null ?
                new ObjectParameter("TerminalId", terminalId) :
                new ObjectParameter("TerminalId", typeof(string));
    
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_InsertSalesCategory", documentIdParameter, categoryNameParameter, userNameParameter, amountParameter, dateParameter, companyIdParameter, terminalIdParameter, locationIdParameter);
        }
    
        public virtual int Proc_InsertSalesDeleteLineItem(string documentId, string categotyId, string amount, string uOM, string materialId, string date, string userId, string addDate, string companyId, string terminalId, string locationId)
        {
            var documentIdParameter = documentId != null ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(string));
    
            var categotyIdParameter = categotyId != null ?
                new ObjectParameter("CategotyId", categotyId) :
                new ObjectParameter("CategotyId", typeof(string));
    
            var amountParameter = amount != null ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var materialIdParameter = materialId != null ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(string));
    
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var addDateParameter = addDate != null ?
                new ObjectParameter("AddDate", addDate) :
                new ObjectParameter("AddDate", typeof(string));
    
            var companyIdParameter = companyId != null ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(string));
    
            var terminalIdParameter = terminalId != null ?
                new ObjectParameter("TerminalId", terminalId) :
                new ObjectParameter("TerminalId", typeof(string));
    
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_InsertSalesDeleteLineItem", documentIdParameter, categotyIdParameter, amountParameter, uOMParameter, materialIdParameter, dateParameter, userIdParameter, addDateParameter, companyIdParameter, terminalIdParameter, locationIdParameter);
        }
    
        public virtual int Proc_InsertsalesUnHold(string documentId, string salesOrder, string companyId, string locationId, string storageId, string terminalId, string docDate, string postingType, string customerId, string counter, string categoryID, string materialID, string uOM, string tranQty, string baseQty, string creditQty, string cost, string price, string discountRate, string amount, string creditAmount, string userID, string postKey, string addDate, string updDate)
        {
            var documentIdParameter = documentId != null ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(string));
    
            var salesOrderParameter = salesOrder != null ?
                new ObjectParameter("SalesOrder", salesOrder) :
                new ObjectParameter("SalesOrder", typeof(string));
    
            var companyIdParameter = companyId != null ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(string));
    
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            var storageIdParameter = storageId != null ?
                new ObjectParameter("StorageId", storageId) :
                new ObjectParameter("StorageId", typeof(string));
    
            var terminalIdParameter = terminalId != null ?
                new ObjectParameter("TerminalId", terminalId) :
                new ObjectParameter("TerminalId", typeof(string));
    
            var docDateParameter = docDate != null ?
                new ObjectParameter("DocDate", docDate) :
                new ObjectParameter("DocDate", typeof(string));
    
            var postingTypeParameter = postingType != null ?
                new ObjectParameter("PostingType", postingType) :
                new ObjectParameter("PostingType", typeof(string));
    
            var customerIdParameter = customerId != null ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(string));
    
            var counterParameter = counter != null ?
                new ObjectParameter("Counter", counter) :
                new ObjectParameter("Counter", typeof(string));
    
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            var materialIDParameter = materialID != null ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var tranQtyParameter = tranQty != null ?
                new ObjectParameter("TranQty", tranQty) :
                new ObjectParameter("TranQty", typeof(string));
    
            var baseQtyParameter = baseQty != null ?
                new ObjectParameter("BaseQty", baseQty) :
                new ObjectParameter("BaseQty", typeof(string));
    
            var creditQtyParameter = creditQty != null ?
                new ObjectParameter("CreditQty", creditQty) :
                new ObjectParameter("CreditQty", typeof(string));
    
            var costParameter = cost != null ?
                new ObjectParameter("Cost", cost) :
                new ObjectParameter("Cost", typeof(string));
    
            var priceParameter = price != null ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(string));
    
            var discountRateParameter = discountRate != null ?
                new ObjectParameter("DiscountRate", discountRate) :
                new ObjectParameter("DiscountRate", typeof(string));
    
            var amountParameter = amount != null ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(string));
    
            var creditAmountParameter = creditAmount != null ?
                new ObjectParameter("CreditAmount", creditAmount) :
                new ObjectParameter("CreditAmount", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var postKeyParameter = postKey != null ?
                new ObjectParameter("PostKey", postKey) :
                new ObjectParameter("PostKey", typeof(string));
    
            var addDateParameter = addDate != null ?
                new ObjectParameter("AddDate", addDate) :
                new ObjectParameter("AddDate", typeof(string));
    
            var updDateParameter = updDate != null ?
                new ObjectParameter("UpdDate", updDate) :
                new ObjectParameter("UpdDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_InsertsalesUnHold", documentIdParameter, salesOrderParameter, companyIdParameter, locationIdParameter, storageIdParameter, terminalIdParameter, docDateParameter, postingTypeParameter, customerIdParameter, counterParameter, categoryIDParameter, materialIDParameter, uOMParameter, tranQtyParameter, baseQtyParameter, creditQtyParameter, costParameter, priceParameter, discountRateParameter, amountParameter, creditAmountParameter, userIDParameter, postKeyParameter, addDateParameter, updDateParameter);
        }
    
        public virtual int Proc_InsertSalesUserTender_Detail(string documentId, string userID, string amount, string docDate, string counter, string terminalId, string changeAmount, string paidAmount, string companyId, string locationId)
        {
            var documentIdParameter = documentId != null ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var amountParameter = amount != null ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(string));
    
            var docDateParameter = docDate != null ?
                new ObjectParameter("DocDate", docDate) :
                new ObjectParameter("DocDate", typeof(string));
    
            var counterParameter = counter != null ?
                new ObjectParameter("Counter", counter) :
                new ObjectParameter("Counter", typeof(string));
    
            var terminalIdParameter = terminalId != null ?
                new ObjectParameter("TerminalId", terminalId) :
                new ObjectParameter("TerminalId", typeof(string));
    
            var changeAmountParameter = changeAmount != null ?
                new ObjectParameter("ChangeAmount", changeAmount) :
                new ObjectParameter("ChangeAmount", typeof(string));
    
            var paidAmountParameter = paidAmount != null ?
                new ObjectParameter("PaidAmount", paidAmount) :
                new ObjectParameter("PaidAmount", typeof(string));
    
            var companyIdParameter = companyId != null ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(string));
    
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_InsertSalesUserTender_Detail", documentIdParameter, userIDParameter, amountParameter, docDateParameter, counterParameter, terminalIdParameter, changeAmountParameter, paidAmountParameter, companyIdParameter, locationIdParameter);
        }
    
        public virtual int Proc_InsertStockReceviceDetails(string dOCUMENTID, string cOMPANYID, string lOCATIONID, string sTORAGEID, string dOCUMENTDATE, string pOSTINGTYPE, string pOSTINGDATE, string vENDORID, string cOUNTER, string cATEGORYID, string mATERIALID, string uOM, string tRANQTY, string bASEQTY, string cREDITQTY, string cOST, string dISCOUNTRATE, string aMOUNT, string cREDITAMOUNT, string uSERID, string pOSTKEY, string aDDDATE, string uPDDATE, string orderQty)
        {
            var dOCUMENTIDParameter = dOCUMENTID != null ?
                new ObjectParameter("DOCUMENTID", dOCUMENTID) :
                new ObjectParameter("DOCUMENTID", typeof(string));
    
            var cOMPANYIDParameter = cOMPANYID != null ?
                new ObjectParameter("COMPANYID", cOMPANYID) :
                new ObjectParameter("COMPANYID", typeof(string));
    
            var lOCATIONIDParameter = lOCATIONID != null ?
                new ObjectParameter("LOCATIONID", lOCATIONID) :
                new ObjectParameter("LOCATIONID", typeof(string));
    
            var sTORAGEIDParameter = sTORAGEID != null ?
                new ObjectParameter("STORAGEID", sTORAGEID) :
                new ObjectParameter("STORAGEID", typeof(string));
    
            var dOCUMENTDATEParameter = dOCUMENTDATE != null ?
                new ObjectParameter("DOCUMENTDATE", dOCUMENTDATE) :
                new ObjectParameter("DOCUMENTDATE", typeof(string));
    
            var pOSTINGTYPEParameter = pOSTINGTYPE != null ?
                new ObjectParameter("POSTINGTYPE", pOSTINGTYPE) :
                new ObjectParameter("POSTINGTYPE", typeof(string));
    
            var pOSTINGDATEParameter = pOSTINGDATE != null ?
                new ObjectParameter("POSTINGDATE", pOSTINGDATE) :
                new ObjectParameter("POSTINGDATE", typeof(string));
    
            var vENDORIDParameter = vENDORID != null ?
                new ObjectParameter("VENDORID", vENDORID) :
                new ObjectParameter("VENDORID", typeof(string));
    
            var cOUNTERParameter = cOUNTER != null ?
                new ObjectParameter("COUNTER", cOUNTER) :
                new ObjectParameter("COUNTER", typeof(string));
    
            var cATEGORYIDParameter = cATEGORYID != null ?
                new ObjectParameter("CATEGORYID", cATEGORYID) :
                new ObjectParameter("CATEGORYID", typeof(string));
    
            var mATERIALIDParameter = mATERIALID != null ?
                new ObjectParameter("MATERIALID", mATERIALID) :
                new ObjectParameter("MATERIALID", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var tRANQTYParameter = tRANQTY != null ?
                new ObjectParameter("TRANQTY", tRANQTY) :
                new ObjectParameter("TRANQTY", typeof(string));
    
            var bASEQTYParameter = bASEQTY != null ?
                new ObjectParameter("BASEQTY", bASEQTY) :
                new ObjectParameter("BASEQTY", typeof(string));
    
            var cREDITQTYParameter = cREDITQTY != null ?
                new ObjectParameter("CREDITQTY", cREDITQTY) :
                new ObjectParameter("CREDITQTY", typeof(string));
    
            var cOSTParameter = cOST != null ?
                new ObjectParameter("COST", cOST) :
                new ObjectParameter("COST", typeof(string));
    
            var dISCOUNTRATEParameter = dISCOUNTRATE != null ?
                new ObjectParameter("DISCOUNTRATE", dISCOUNTRATE) :
                new ObjectParameter("DISCOUNTRATE", typeof(string));
    
            var aMOUNTParameter = aMOUNT != null ?
                new ObjectParameter("AMOUNT", aMOUNT) :
                new ObjectParameter("AMOUNT", typeof(string));
    
            var cREDITAMOUNTParameter = cREDITAMOUNT != null ?
                new ObjectParameter("CREDITAMOUNT", cREDITAMOUNT) :
                new ObjectParameter("CREDITAMOUNT", typeof(string));
    
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            var pOSTKEYParameter = pOSTKEY != null ?
                new ObjectParameter("POSTKEY", pOSTKEY) :
                new ObjectParameter("POSTKEY", typeof(string));
    
            var aDDDATEParameter = aDDDATE != null ?
                new ObjectParameter("ADDDATE", aDDDATE) :
                new ObjectParameter("ADDDATE", typeof(string));
    
            var uPDDATEParameter = uPDDATE != null ?
                new ObjectParameter("UPDDATE", uPDDATE) :
                new ObjectParameter("UPDDATE", typeof(string));
    
            var orderQtyParameter = orderQty != null ?
                new ObjectParameter("OrderQty", orderQty) :
                new ObjectParameter("OrderQty", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_InsertStockReceviceDetails", dOCUMENTIDParameter, cOMPANYIDParameter, lOCATIONIDParameter, sTORAGEIDParameter, dOCUMENTDATEParameter, pOSTINGTYPEParameter, pOSTINGDATEParameter, vENDORIDParameter, cOUNTERParameter, cATEGORYIDParameter, mATERIALIDParameter, uOMParameter, tRANQTYParameter, bASEQTYParameter, cREDITQTYParameter, cOSTParameter, dISCOUNTRATEParameter, aMOUNTParameter, cREDITAMOUNTParameter, uSERIDParameter, pOSTKEYParameter, aDDDATEParameter, uPDDATEParameter, orderQtyParameter);
        }
    
        public virtual int proc_InsertTranferDisplay_Ent(string documentID, string companyID, string locationID, Nullable<System.DateTime> documentDate, Nullable<System.DateTime> postingDate, Nullable<System.DateTime> addDate, Nullable<System.DateTime> updDate, string materialId, string uOM, string tranQty, string baseQty, string categoryId, string userID)
        {
            var documentIDParameter = documentID != null ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var documentDateParameter = documentDate.HasValue ?
                new ObjectParameter("DocumentDate", documentDate) :
                new ObjectParameter("DocumentDate", typeof(System.DateTime));
    
            var postingDateParameter = postingDate.HasValue ?
                new ObjectParameter("PostingDate", postingDate) :
                new ObjectParameter("PostingDate", typeof(System.DateTime));
    
            var addDateParameter = addDate.HasValue ?
                new ObjectParameter("AddDate", addDate) :
                new ObjectParameter("AddDate", typeof(System.DateTime));
    
            var updDateParameter = updDate.HasValue ?
                new ObjectParameter("UpdDate", updDate) :
                new ObjectParameter("UpdDate", typeof(System.DateTime));
    
            var materialIdParameter = materialId != null ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var tranQtyParameter = tranQty != null ?
                new ObjectParameter("TranQty", tranQty) :
                new ObjectParameter("TranQty", typeof(string));
    
            var baseQtyParameter = baseQty != null ?
                new ObjectParameter("BaseQty", baseQty) :
                new ObjectParameter("BaseQty", typeof(string));
    
            var categoryIdParameter = categoryId != null ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_InsertTranferDisplay_Ent", documentIDParameter, companyIDParameter, locationIDParameter, documentDateParameter, postingDateParameter, addDateParameter, updDateParameter, materialIdParameter, uOMParameter, tranQtyParameter, baseQtyParameter, categoryIdParameter, userIDParameter);
        }
    
        public virtual int proc_InsertTranferInDetail(string documentID, string companyID, string locationID, Nullable<System.DateTime> documentDate, Nullable<System.DateTime> postingDate, Nullable<System.DateTime> addDate, Nullable<System.DateTime> updDate, string materialId, string uOM, string tranQty, string baseQty, string storageId, Nullable<int> postKey, string categoryId, string userID)
        {
            var documentIDParameter = documentID != null ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var documentDateParameter = documentDate.HasValue ?
                new ObjectParameter("DocumentDate", documentDate) :
                new ObjectParameter("DocumentDate", typeof(System.DateTime));
    
            var postingDateParameter = postingDate.HasValue ?
                new ObjectParameter("PostingDate", postingDate) :
                new ObjectParameter("PostingDate", typeof(System.DateTime));
    
            var addDateParameter = addDate.HasValue ?
                new ObjectParameter("AddDate", addDate) :
                new ObjectParameter("AddDate", typeof(System.DateTime));
    
            var updDateParameter = updDate.HasValue ?
                new ObjectParameter("UpdDate", updDate) :
                new ObjectParameter("UpdDate", typeof(System.DateTime));
    
            var materialIdParameter = materialId != null ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var tranQtyParameter = tranQty != null ?
                new ObjectParameter("TranQty", tranQty) :
                new ObjectParameter("TranQty", typeof(string));
    
            var baseQtyParameter = baseQty != null ?
                new ObjectParameter("BaseQty", baseQty) :
                new ObjectParameter("BaseQty", typeof(string));
    
            var storageIdParameter = storageId != null ?
                new ObjectParameter("StorageId", storageId) :
                new ObjectParameter("StorageId", typeof(string));
    
            var postKeyParameter = postKey.HasValue ?
                new ObjectParameter("PostKey", postKey) :
                new ObjectParameter("PostKey", typeof(int));
    
            var categoryIdParameter = categoryId != null ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_InsertTranferInDetail", documentIDParameter, companyIDParameter, locationIDParameter, documentDateParameter, postingDateParameter, addDateParameter, updDateParameter, materialIdParameter, uOMParameter, tranQtyParameter, baseQtyParameter, storageIdParameter, postKeyParameter, categoryIdParameter, userIDParameter);
        }
    
        public virtual int proc_InsertTranferOutDetail(string documentID, string companyID, string locationID, Nullable<System.DateTime> documentDate, Nullable<System.DateTime> postingDate, Nullable<System.DateTime> addDate, Nullable<System.DateTime> updDate, string materialId, string uOM, string tranQty, string baseQty, string storageId, Nullable<int> postKey, string categoryId, string userId)
        {
            var documentIDParameter = documentID != null ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var documentDateParameter = documentDate.HasValue ?
                new ObjectParameter("DocumentDate", documentDate) :
                new ObjectParameter("DocumentDate", typeof(System.DateTime));
    
            var postingDateParameter = postingDate.HasValue ?
                new ObjectParameter("PostingDate", postingDate) :
                new ObjectParameter("PostingDate", typeof(System.DateTime));
    
            var addDateParameter = addDate.HasValue ?
                new ObjectParameter("AddDate", addDate) :
                new ObjectParameter("AddDate", typeof(System.DateTime));
    
            var updDateParameter = updDate.HasValue ?
                new ObjectParameter("UpdDate", updDate) :
                new ObjectParameter("UpdDate", typeof(System.DateTime));
    
            var materialIdParameter = materialId != null ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var tranQtyParameter = tranQty != null ?
                new ObjectParameter("TranQty", tranQty) :
                new ObjectParameter("TranQty", typeof(string));
    
            var baseQtyParameter = baseQty != null ?
                new ObjectParameter("BaseQty", baseQty) :
                new ObjectParameter("BaseQty", typeof(string));
    
            var storageIdParameter = storageId != null ?
                new ObjectParameter("StorageId", storageId) :
                new ObjectParameter("StorageId", typeof(string));
    
            var postKeyParameter = postKey.HasValue ?
                new ObjectParameter("PostKey", postKey) :
                new ObjectParameter("PostKey", typeof(int));
    
            var categoryIdParameter = categoryId != null ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_InsertTranferOutDetail", documentIDParameter, companyIDParameter, locationIDParameter, documentDateParameter, postingDateParameter, addDateParameter, updDateParameter, materialIdParameter, uOMParameter, tranQtyParameter, baseQtyParameter, storageIdParameter, postKeyParameter, categoryIdParameter, userIdParameter);
        }
    
        public virtual int Proc_InsertTranfterINDetails(string dOCUMENTID, string cOMPANYID, string lOCATIONID, string sTORAGEID, string dOCUMENTDATE, string pOSTINGTYPE, string pOSTINGDATE, string vENDORID, string cOUNTER, string cATEGORYID, string mATERIALID, string uOM, string tRANQTY, string bASEQTY, string cREDITQTY, string cOST, string dISCOUNTRATE, string aMOUNT, string cREDITAMOUNT, string uSERID, string pOSTKEY, string aDDDATE, string uPDDATE, string orderQty, string fromLocationID, string fromStorageID)
        {
            var dOCUMENTIDParameter = dOCUMENTID != null ?
                new ObjectParameter("DOCUMENTID", dOCUMENTID) :
                new ObjectParameter("DOCUMENTID", typeof(string));
    
            var cOMPANYIDParameter = cOMPANYID != null ?
                new ObjectParameter("COMPANYID", cOMPANYID) :
                new ObjectParameter("COMPANYID", typeof(string));
    
            var lOCATIONIDParameter = lOCATIONID != null ?
                new ObjectParameter("LOCATIONID", lOCATIONID) :
                new ObjectParameter("LOCATIONID", typeof(string));
    
            var sTORAGEIDParameter = sTORAGEID != null ?
                new ObjectParameter("STORAGEID", sTORAGEID) :
                new ObjectParameter("STORAGEID", typeof(string));
    
            var dOCUMENTDATEParameter = dOCUMENTDATE != null ?
                new ObjectParameter("DOCUMENTDATE", dOCUMENTDATE) :
                new ObjectParameter("DOCUMENTDATE", typeof(string));
    
            var pOSTINGTYPEParameter = pOSTINGTYPE != null ?
                new ObjectParameter("POSTINGTYPE", pOSTINGTYPE) :
                new ObjectParameter("POSTINGTYPE", typeof(string));
    
            var pOSTINGDATEParameter = pOSTINGDATE != null ?
                new ObjectParameter("POSTINGDATE", pOSTINGDATE) :
                new ObjectParameter("POSTINGDATE", typeof(string));
    
            var vENDORIDParameter = vENDORID != null ?
                new ObjectParameter("VENDORID", vENDORID) :
                new ObjectParameter("VENDORID", typeof(string));
    
            var cOUNTERParameter = cOUNTER != null ?
                new ObjectParameter("COUNTER", cOUNTER) :
                new ObjectParameter("COUNTER", typeof(string));
    
            var cATEGORYIDParameter = cATEGORYID != null ?
                new ObjectParameter("CATEGORYID", cATEGORYID) :
                new ObjectParameter("CATEGORYID", typeof(string));
    
            var mATERIALIDParameter = mATERIALID != null ?
                new ObjectParameter("MATERIALID", mATERIALID) :
                new ObjectParameter("MATERIALID", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var tRANQTYParameter = tRANQTY != null ?
                new ObjectParameter("TRANQTY", tRANQTY) :
                new ObjectParameter("TRANQTY", typeof(string));
    
            var bASEQTYParameter = bASEQTY != null ?
                new ObjectParameter("BASEQTY", bASEQTY) :
                new ObjectParameter("BASEQTY", typeof(string));
    
            var cREDITQTYParameter = cREDITQTY != null ?
                new ObjectParameter("CREDITQTY", cREDITQTY) :
                new ObjectParameter("CREDITQTY", typeof(string));
    
            var cOSTParameter = cOST != null ?
                new ObjectParameter("COST", cOST) :
                new ObjectParameter("COST", typeof(string));
    
            var dISCOUNTRATEParameter = dISCOUNTRATE != null ?
                new ObjectParameter("DISCOUNTRATE", dISCOUNTRATE) :
                new ObjectParameter("DISCOUNTRATE", typeof(string));
    
            var aMOUNTParameter = aMOUNT != null ?
                new ObjectParameter("AMOUNT", aMOUNT) :
                new ObjectParameter("AMOUNT", typeof(string));
    
            var cREDITAMOUNTParameter = cREDITAMOUNT != null ?
                new ObjectParameter("CREDITAMOUNT", cREDITAMOUNT) :
                new ObjectParameter("CREDITAMOUNT", typeof(string));
    
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            var pOSTKEYParameter = pOSTKEY != null ?
                new ObjectParameter("POSTKEY", pOSTKEY) :
                new ObjectParameter("POSTKEY", typeof(string));
    
            var aDDDATEParameter = aDDDATE != null ?
                new ObjectParameter("ADDDATE", aDDDATE) :
                new ObjectParameter("ADDDATE", typeof(string));
    
            var uPDDATEParameter = uPDDATE != null ?
                new ObjectParameter("UPDDATE", uPDDATE) :
                new ObjectParameter("UPDDATE", typeof(string));
    
            var orderQtyParameter = orderQty != null ?
                new ObjectParameter("OrderQty", orderQty) :
                new ObjectParameter("OrderQty", typeof(string));
    
            var fromLocationIDParameter = fromLocationID != null ?
                new ObjectParameter("FromLocationID", fromLocationID) :
                new ObjectParameter("FromLocationID", typeof(string));
    
            var fromStorageIDParameter = fromStorageID != null ?
                new ObjectParameter("FromStorageID", fromStorageID) :
                new ObjectParameter("FromStorageID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_InsertTranfterINDetails", dOCUMENTIDParameter, cOMPANYIDParameter, lOCATIONIDParameter, sTORAGEIDParameter, dOCUMENTDATEParameter, pOSTINGTYPEParameter, pOSTINGDATEParameter, vENDORIDParameter, cOUNTERParameter, cATEGORYIDParameter, mATERIALIDParameter, uOMParameter, tRANQTYParameter, bASEQTYParameter, cREDITQTYParameter, cOSTParameter, dISCOUNTRATEParameter, aMOUNTParameter, cREDITAMOUNTParameter, uSERIDParameter, pOSTKEYParameter, aDDDATEParameter, uPDDATEParameter, orderQtyParameter, fromLocationIDParameter, fromStorageIDParameter);
        }
    
        public virtual ObjectResult<Proc_ItemCardReport_Result> Proc_ItemCardReport(string locationID, string storageId, string materialID)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var storageIdParameter = storageId != null ?
                new ObjectParameter("StorageId", storageId) :
                new ObjectParameter("StorageId", typeof(string));
    
            var materialIDParameter = materialID != null ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_ItemCardReport_Result>("Proc_ItemCardReport", locationIDParameter, storageIdParameter, materialIDParameter);
        }
    
        public virtual ObjectResult<Proc_LoadGetLocationStorage_Result> Proc_LoadGetLocationStorage()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_LoadGetLocationStorage_Result>("Proc_LoadGetLocationStorage");
        }
    
        public virtual ObjectResult<Proc_LoadMasterCategory_Result> Proc_LoadMasterCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_LoadMasterCategory_Result>("Proc_LoadMasterCategory");
        }
    
        public virtual ObjectResult<Proc_LoadMasterLocation_Result> Proc_LoadMasterLocation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_LoadMasterLocation_Result>("Proc_LoadMasterLocation");
        }
    
        public virtual ObjectResult<Proc_LoadMasterSubCategory_Result> Proc_LoadMasterSubCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_LoadMasterSubCategory_Result>("Proc_LoadMasterSubCategory");
        }
    
        public virtual ObjectResult<Proc_LoadMasterTerminal_Result> Proc_LoadMasterTerminal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_LoadMasterTerminal_Result>("Proc_LoadMasterTerminal");
        }
    
        public virtual ObjectResult<Proc_LoadMasterVendor_Result> Proc_LoadMasterVendor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_LoadMasterVendor_Result>("Proc_LoadMasterVendor");
        }
    
        public virtual ObjectResult<Proc_LoadMaterialDetails_Result> Proc_LoadMaterialDetails(string materialID)
        {
            var materialIDParameter = materialID != null ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_LoadMaterialDetails_Result>("Proc_LoadMaterialDetails", materialIDParameter);
        }
    
        public virtual ObjectResult<Proc_LoadOrderDetails_Result> Proc_LoadOrderDetails(string documentID)
        {
            var documentIDParameter = documentID != null ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_LoadOrderDetails_Result>("Proc_LoadOrderDetails", documentIDParameter);
        }
    
        public virtual ObjectResult<string> proc_LoadPhyCount(string sLocationId)
        {
            var sLocationIdParameter = sLocationId != null ?
                new ObjectParameter("SLocationId", sLocationId) :
                new ObjectParameter("SLocationId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_LoadPhyCount", sLocationIdParameter);
        }
    
        public virtual ObjectResult<string> proc_LoadRtnId(string sLocationId)
        {
            var sLocationIdParameter = sLocationId != null ?
                new ObjectParameter("SLocationId", sLocationId) :
                new ObjectParameter("SLocationId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_LoadRtnId", sLocationIdParameter);
        }
    
        public virtual ObjectResult<Proc_LoadStorageGetById_Result> Proc_LoadStorageGetById(string locationId)
        {
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_LoadStorageGetById_Result>("Proc_LoadStorageGetById", locationIdParameter);
        }
    
        public virtual ObjectResult<proc_LoadTranferInId_Result> proc_LoadTranferInId(string sLocationId)
        {
            var sLocationIdParameter = sLocationId != null ?
                new ObjectParameter("SLocationId", sLocationId) :
                new ObjectParameter("SLocationId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_LoadTranferInId_Result>("proc_LoadTranferInId", sLocationIdParameter);
        }
    
        public virtual ObjectResult<Proc_LoadVendor_Result> Proc_LoadVendor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_LoadVendor_Result>("Proc_LoadVendor");
        }
    
        public virtual ObjectResult<Proc_MaterialBarcodeSearch_Result> Proc_MaterialBarcodeSearch(string materialORBarCode, string vendorID, string pageName)
        {
            var materialORBarCodeParameter = materialORBarCode != null ?
                new ObjectParameter("MaterialORBarCode", materialORBarCode) :
                new ObjectParameter("MaterialORBarCode", typeof(string));
    
            var vendorIDParameter = vendorID != null ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(string));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_MaterialBarcodeSearch_Result>("Proc_MaterialBarcodeSearch", materialORBarCodeParameter, vendorIDParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<Proc_MaterialCategorySearch_Result> Proc_MaterialCategorySearch(string categoryText, string materialID, string categoryID)
        {
            var categoryTextParameter = categoryText != null ?
                new ObjectParameter("CategoryText", categoryText) :
                new ObjectParameter("CategoryText", typeof(string));
    
            var materialIDParameter = materialID != null ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(string));
    
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_MaterialCategorySearch_Result>("Proc_MaterialCategorySearch", categoryTextParameter, materialIDParameter, categoryIDParameter);
        }
    
        public virtual ObjectResult<Proc_MaterialMix_Result> Proc_MaterialMix(string materialId)
        {
            var materialIdParameter = materialId != null ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_MaterialMix_Result>("Proc_MaterialMix", materialIdParameter);
        }
    
        public virtual int Proc_PhyInventory(string documentID, string pONumber, string companyID, string locationID, string documentDate, Nullable<System.DateTime> postingDate, string userID, Nullable<System.DateTime> addDate, string filter, string filterId, string storageId, string docDetail)
        {
            var documentIDParameter = documentID != null ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(string));
    
            var pONumberParameter = pONumber != null ?
                new ObjectParameter("PONumber", pONumber) :
                new ObjectParameter("PONumber", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var documentDateParameter = documentDate != null ?
                new ObjectParameter("DocumentDate", documentDate) :
                new ObjectParameter("DocumentDate", typeof(string));
    
            var postingDateParameter = postingDate.HasValue ?
                new ObjectParameter("PostingDate", postingDate) :
                new ObjectParameter("PostingDate", typeof(System.DateTime));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var addDateParameter = addDate.HasValue ?
                new ObjectParameter("AddDate", addDate) :
                new ObjectParameter("AddDate", typeof(System.DateTime));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var filterIdParameter = filterId != null ?
                new ObjectParameter("FilterId", filterId) :
                new ObjectParameter("FilterId", typeof(string));
    
            var storageIdParameter = storageId != null ?
                new ObjectParameter("StorageId", storageId) :
                new ObjectParameter("StorageId", typeof(string));
    
            var docDetailParameter = docDetail != null ?
                new ObjectParameter("DocDetail", docDetail) :
                new ObjectParameter("DocDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_PhyInventory", documentIDParameter, pONumberParameter, companyIDParameter, locationIDParameter, documentDateParameter, postingDateParameter, userIDParameter, addDateParameter, filterParameter, filterIdParameter, storageIdParameter, docDetailParameter);
        }
    
        public virtual int Proc_PhyInventory_Detail(string documentID, string companyID, string locationID, Nullable<System.DateTime> documentDate, Nullable<System.DateTime> postingDate, Nullable<System.DateTime> addDate, Nullable<System.DateTime> updDate, string materialId, Nullable<decimal> entryBaseQty, string categoryId, string userID, string storageId)
        {
            var documentIDParameter = documentID != null ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var documentDateParameter = documentDate.HasValue ?
                new ObjectParameter("DocumentDate", documentDate) :
                new ObjectParameter("DocumentDate", typeof(System.DateTime));
    
            var postingDateParameter = postingDate.HasValue ?
                new ObjectParameter("PostingDate", postingDate) :
                new ObjectParameter("PostingDate", typeof(System.DateTime));
    
            var addDateParameter = addDate.HasValue ?
                new ObjectParameter("AddDate", addDate) :
                new ObjectParameter("AddDate", typeof(System.DateTime));
    
            var updDateParameter = updDate.HasValue ?
                new ObjectParameter("UpdDate", updDate) :
                new ObjectParameter("UpdDate", typeof(System.DateTime));
    
            var materialIdParameter = materialId != null ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(string));
    
            var entryBaseQtyParameter = entryBaseQty.HasValue ?
                new ObjectParameter("EntryBaseQty", entryBaseQty) :
                new ObjectParameter("EntryBaseQty", typeof(decimal));
    
            var categoryIdParameter = categoryId != null ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var storageIdParameter = storageId != null ?
                new ObjectParameter("StorageId", storageId) :
                new ObjectParameter("StorageId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_PhyInventory_Detail", documentIDParameter, companyIDParameter, locationIDParameter, documentDateParameter, postingDateParameter, addDateParameter, updDateParameter, materialIdParameter, entryBaseQtyParameter, categoryIdParameter, userIDParameter, storageIdParameter);
        }
    
        public virtual int Proc_PhyInventory_Entry(string documentID, string companyID, string locationID, Nullable<System.DateTime> documentDate, Nullable<System.DateTime> postingDate, Nullable<System.DateTime> addDate, Nullable<System.DateTime> updDate, string materialId, Nullable<decimal> convertFactor, string uOM, string tranQty, string baseQty, string categoryId, string userID, string storageId, string postKey, string postingType, string vendorId, string creditQty, string cost, string discountRate, string amount, string creditAmount)
        {
            var documentIDParameter = documentID != null ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var documentDateParameter = documentDate.HasValue ?
                new ObjectParameter("DocumentDate", documentDate) :
                new ObjectParameter("DocumentDate", typeof(System.DateTime));
    
            var postingDateParameter = postingDate.HasValue ?
                new ObjectParameter("PostingDate", postingDate) :
                new ObjectParameter("PostingDate", typeof(System.DateTime));
    
            var addDateParameter = addDate.HasValue ?
                new ObjectParameter("AddDate", addDate) :
                new ObjectParameter("AddDate", typeof(System.DateTime));
    
            var updDateParameter = updDate.HasValue ?
                new ObjectParameter("UpdDate", updDate) :
                new ObjectParameter("UpdDate", typeof(System.DateTime));
    
            var materialIdParameter = materialId != null ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(string));
    
            var convertFactorParameter = convertFactor.HasValue ?
                new ObjectParameter("ConvertFactor", convertFactor) :
                new ObjectParameter("ConvertFactor", typeof(decimal));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var tranQtyParameter = tranQty != null ?
                new ObjectParameter("TranQty", tranQty) :
                new ObjectParameter("TranQty", typeof(string));
    
            var baseQtyParameter = baseQty != null ?
                new ObjectParameter("BaseQty", baseQty) :
                new ObjectParameter("BaseQty", typeof(string));
    
            var categoryIdParameter = categoryId != null ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var storageIdParameter = storageId != null ?
                new ObjectParameter("StorageId", storageId) :
                new ObjectParameter("StorageId", typeof(string));
    
            var postKeyParameter = postKey != null ?
                new ObjectParameter("PostKey", postKey) :
                new ObjectParameter("PostKey", typeof(string));
    
            var postingTypeParameter = postingType != null ?
                new ObjectParameter("PostingType", postingType) :
                new ObjectParameter("PostingType", typeof(string));
    
            var vendorIdParameter = vendorId != null ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(string));
    
            var creditQtyParameter = creditQty != null ?
                new ObjectParameter("CreditQty", creditQty) :
                new ObjectParameter("CreditQty", typeof(string));
    
            var costParameter = cost != null ?
                new ObjectParameter("Cost", cost) :
                new ObjectParameter("Cost", typeof(string));
    
            var discountRateParameter = discountRate != null ?
                new ObjectParameter("DiscountRate", discountRate) :
                new ObjectParameter("DiscountRate", typeof(string));
    
            var amountParameter = amount != null ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(string));
    
            var creditAmountParameter = creditAmount != null ?
                new ObjectParameter("CreditAmount", creditAmount) :
                new ObjectParameter("CreditAmount", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_PhyInventory_Entry", documentIDParameter, companyIDParameter, locationIDParameter, documentDateParameter, postingDateParameter, addDateParameter, updDateParameter, materialIdParameter, convertFactorParameter, uOMParameter, tranQtyParameter, baseQtyParameter, categoryIdParameter, userIDParameter, storageIdParameter, postKeyParameter, postingTypeParameter, vendorIdParameter, creditQtyParameter, costParameter, discountRateParameter, amountParameter, creditAmountParameter);
        }
    
        public virtual int Proc_POS_Error_logs(string proc_Name, string parameters, string error_Message, Nullable<System.DateTime> row_Created_Date, string error_Number, string error_Line)
        {
            var proc_NameParameter = proc_Name != null ?
                new ObjectParameter("Proc_Name", proc_Name) :
                new ObjectParameter("Proc_Name", typeof(string));
    
            var parametersParameter = parameters != null ?
                new ObjectParameter("Parameters", parameters) :
                new ObjectParameter("Parameters", typeof(string));
    
            var error_MessageParameter = error_Message != null ?
                new ObjectParameter("Error_Message", error_Message) :
                new ObjectParameter("Error_Message", typeof(string));
    
            var row_Created_DateParameter = row_Created_Date.HasValue ?
                new ObjectParameter("Row_Created_Date", row_Created_Date) :
                new ObjectParameter("Row_Created_Date", typeof(System.DateTime));
    
            var error_NumberParameter = error_Number != null ?
                new ObjectParameter("Error_Number", error_Number) :
                new ObjectParameter("Error_Number", typeof(string));
    
            var error_LineParameter = error_Line != null ?
                new ObjectParameter("Error_Line", error_Line) :
                new ObjectParameter("Error_Line", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_POS_Error_logs", proc_NameParameter, parametersParameter, error_MessageParameter, row_Created_DateParameter, error_NumberParameter, error_LineParameter);
        }
    
        public virtual int Proc_ProductionOrderDetails(string locationId, string storageID, string bOMID, string uOM, string quantity, string userId)
        {
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            var storageIDParameter = storageID != null ?
                new ObjectParameter("StorageID", storageID) :
                new ObjectParameter("StorageID", typeof(string));
    
            var bOMIDParameter = bOMID != null ?
                new ObjectParameter("BOMID", bOMID) :
                new ObjectParameter("BOMID", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var quantityParameter = quantity != null ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_ProductionOrderDetails", locationIdParameter, storageIDParameter, bOMIDParameter, uOMParameter, quantityParameter, userIdParameter);
        }
    
        public virtual int Proc_ProductionOrderDetails_Update(string locationId, string storageID, string bOMID, string uOM, string quantity, string userId, Nullable<long> iD)
        {
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            var storageIDParameter = storageID != null ?
                new ObjectParameter("StorageID", storageID) :
                new ObjectParameter("StorageID", typeof(string));
    
            var bOMIDParameter = bOMID != null ?
                new ObjectParameter("BOMID", bOMID) :
                new ObjectParameter("BOMID", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var quantityParameter = quantity != null ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_ProductionOrderDetails_Update", locationIdParameter, storageIDParameter, bOMIDParameter, uOMParameter, quantityParameter, userIdParameter, iDParameter);
        }
    
        public virtual int Proc_ProductionOrderHeader(string locationID, string storageId, string userId, string pONumber)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var storageIdParameter = storageId != null ?
                new ObjectParameter("StorageId", storageId) :
                new ObjectParameter("StorageId", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var pONumberParameter = pONumber != null ?
                new ObjectParameter("PONumber", pONumber) :
                new ObjectParameter("PONumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_ProductionOrderHeader", locationIDParameter, storageIdParameter, userIdParameter, pONumberParameter);
        }
    
        public virtual ObjectResult<Proc_ProductionOrderRequest_Derail_In_ProductionOrder_Result> Proc_ProductionOrderRequest_Derail_In_ProductionOrder(string locationID, string docuemtId)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var docuemtIdParameter = docuemtId != null ?
                new ObjectParameter("DocuemtId", docuemtId) :
                new ObjectParameter("DocuemtId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_ProductionOrderRequest_Derail_In_ProductionOrder_Result>("Proc_ProductionOrderRequest_Derail_In_ProductionOrder", locationIDParameter, docuemtIdParameter);
        }
    
        public virtual ObjectResult<string> Proc_ProductionOrderRequestDetails(string locationId, string storageID, string bOMID, string uOM, string quantity, string userId)
        {
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            var storageIDParameter = storageID != null ?
                new ObjectParameter("StorageID", storageID) :
                new ObjectParameter("StorageID", typeof(string));
    
            var bOMIDParameter = bOMID != null ?
                new ObjectParameter("BOMID", bOMID) :
                new ObjectParameter("BOMID", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var quantityParameter = quantity != null ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Proc_ProductionOrderRequestDetails", locationIdParameter, storageIDParameter, bOMIDParameter, uOMParameter, quantityParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Proc_ProfitShortageReport_Result> Proc_ProfitShortageReport(string locationId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_ProfitShortageReport_Result>("Proc_ProfitShortageReport", locationIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<Proc_ReportPhyInvDifferentReport_Result> Proc_ReportPhyInvDifferentReport(string locationID, string documentID)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var documentIDParameter = documentID != null ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_ReportPhyInvDifferentReport_Result>("Proc_ReportPhyInvDifferentReport", locationIDParameter, documentIDParameter);
        }
    
        public virtual ObjectResult<Proc_ReportPHYSICALINVENTORYDETAILS_Result> Proc_ReportPHYSICALINVENTORYDETAILS(string storageID, string documentID)
        {
            var storageIDParameter = storageID != null ?
                new ObjectParameter("StorageID", storageID) :
                new ObjectParameter("StorageID", typeof(string));
    
            var documentIDParameter = documentID != null ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_ReportPHYSICALINVENTORYDETAILS_Result>("Proc_ReportPHYSICALINVENTORYDETAILS", storageIDParameter, documentIDParameter);
        }
    
        public virtual ObjectResult<Proc_ReportPHYSICALINVENTORYDIFFDETAILS_Result> Proc_ReportPHYSICALINVENTORYDIFFDETAILS(string storageID, string documentID)
        {
            var storageIDParameter = storageID != null ?
                new ObjectParameter("StorageID", storageID) :
                new ObjectParameter("StorageID", typeof(string));
    
            var documentIDParameter = documentID != null ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_ReportPHYSICALINVENTORYDIFFDETAILS_Result>("Proc_ReportPHYSICALINVENTORYDIFFDETAILS", storageIDParameter, documentIDParameter);
        }
    
        public virtual ObjectResult<Proc_ReportPORECEIVE_Result> Proc_ReportPORECEIVE(string documentID, string locationID)
        {
            var documentIDParameter = documentID != null ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(string));
    
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_ReportPORECEIVE_Result>("Proc_ReportPORECEIVE", documentIDParameter, locationIDParameter);
        }
    
        public virtual ObjectResult<Proc_ReportPRODUCTIONORDERDETAILS_Result> Proc_ReportPRODUCTIONORDERDETAILS(string locationID, string documentID, string filter)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var documentIDParameter = documentID != null ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_ReportPRODUCTIONORDERDETAILS_Result>("Proc_ReportPRODUCTIONORDERDETAILS", locationIDParameter, documentIDParameter, filterParameter);
        }
    
        public virtual ObjectResult<Proc_ReportRETURNTOSUPPLIER_Result> Proc_ReportRETURNTOSUPPLIER(string documentID)
        {
            var documentIDParameter = documentID != null ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_ReportRETURNTOSUPPLIER_Result>("Proc_ReportRETURNTOSUPPLIER", documentIDParameter);
        }
    
        public virtual ObjectResult<Proc_ReportSTOCKRECEIVEDETAILS_Result> Proc_ReportSTOCKRECEIVEDETAILS(string documentID, string locationID)
        {
            var documentIDParameter = documentID != null ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(string));
    
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_ReportSTOCKRECEIVEDETAILS_Result>("Proc_ReportSTOCKRECEIVEDETAILS", documentIDParameter, locationIDParameter);
        }
    
        public virtual ObjectResult<PROC_REPORTTRANSFER_DIS_OUT_IN_Result> PROC_REPORTTRANSFER_DIS_OUT_IN(string fILTERNAME, string dOCUMENTID, string lOCATIONID)
        {
            var fILTERNAMEParameter = fILTERNAME != null ?
                new ObjectParameter("FILTERNAME", fILTERNAME) :
                new ObjectParameter("FILTERNAME", typeof(string));
    
            var dOCUMENTIDParameter = dOCUMENTID != null ?
                new ObjectParameter("DOCUMENTID", dOCUMENTID) :
                new ObjectParameter("DOCUMENTID", typeof(string));
    
            var lOCATIONIDParameter = lOCATIONID != null ?
                new ObjectParameter("LOCATIONID", lOCATIONID) :
                new ObjectParameter("LOCATIONID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_REPORTTRANSFER_DIS_OUT_IN_Result>("PROC_REPORTTRANSFER_DIS_OUT_IN", fILTERNAMEParameter, dOCUMENTIDParameter, lOCATIONIDParameter);
        }
    
        public virtual ObjectResult<Proc_ReportTRANSFERTODISPLAY_Result> Proc_ReportTRANSFERTODISPLAY(string documentID, string locationID)
        {
            var documentIDParameter = documentID != null ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(string));
    
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_ReportTRANSFERTODISPLAY_Result>("Proc_ReportTRANSFERTODISPLAY", documentIDParameter, locationIDParameter);
        }
    
        public virtual ObjectResult<Proc_SearchBOMID_Result> Proc_SearchBOMID(string bOMID)
        {
            var bOMIDParameter = bOMID != null ?
                new ObjectParameter("BOMID", bOMID) :
                new ObjectParameter("BOMID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_SearchBOMID_Result>("Proc_SearchBOMID", bOMIDParameter);
        }
    
        public virtual ObjectResult<Proc_SearchEAN_Result> Proc_SearchEAN(string eAN13, string uOM, string vendorID, string pageName)
        {
            var eAN13Parameter = eAN13 != null ?
                new ObjectParameter("EAN13", eAN13) :
                new ObjectParameter("EAN13", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var vendorIDParameter = vendorID != null ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(string));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_SearchEAN_Result>("Proc_SearchEAN", eAN13Parameter, uOMParameter, vendorIDParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<Proc_SearchMasterTerminal_Result> Proc_SearchMasterTerminal(string search)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_SearchMasterTerminal_Result>("Proc_SearchMasterTerminal", searchParameter);
        }
    
        public virtual ObjectResult<Proc_SearchMasterVendor_Result> Proc_SearchMasterVendor(string search)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_SearchMasterVendor_Result>("Proc_SearchMasterVendor", searchParameter);
        }
    
        public virtual ObjectResult<string> Proc_Select_ProductionOrder_Request_DocuemtnID(string locationID)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Proc_Select_ProductionOrder_Request_DocuemtnID", locationIDParameter);
        }
    
        public virtual ObjectResult<Proc_SelectCustomerRegistration_Result> Proc_SelectCustomerRegistration(string customerID)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_SelectCustomerRegistration_Result>("Proc_SelectCustomerRegistration", customerIDParameter);
        }
    
        public virtual ObjectResult<Proc_SelectEODEnquiry_Result> Proc_SelectEODEnquiry()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_SelectEODEnquiry_Result>("Proc_SelectEODEnquiry");
        }
    
        public virtual ObjectResult<Proc_SelectProductionOrderRequest_Detail_Result> Proc_SelectProductionOrderRequest_Detail(string locationID)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_SelectProductionOrderRequest_Detail_Result>("Proc_SelectProductionOrderRequest_Detail", locationIDParameter);
        }
    
        public virtual ObjectResult<Proc_SelectUserAuthentication_Result> Proc_SelectUserAuthentication(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_SelectUserAuthentication_Result>("Proc_SelectUserAuthentication", userIdParameter);
        }
    
        public virtual ObjectResult<Proc_SelectUserId_Result> Proc_SelectUserId(string managerEmail)
        {
            var managerEmailParameter = managerEmail != null ?
                new ObjectParameter("ManagerEmail", managerEmail) :
                new ObjectParameter("ManagerEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_SelectUserId_Result>("Proc_SelectUserId", managerEmailParameter);
        }
    
        public virtual ObjectResult<Proc_SlectStockS_Result> Proc_SlectStockS(string locationId)
        {
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_SlectStockS_Result>("Proc_SlectStockS", locationIdParameter);
        }
    
        public virtual ObjectResult<Proc_Sync_PhysicalInventoryNotIn_Result> Proc_Sync_PhysicalInventoryNotIn(string locationId, string documentId, string fillter, string storageId)
        {
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            var documentIdParameter = documentId != null ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(string));
    
            var fillterParameter = fillter != null ?
                new ObjectParameter("Fillter", fillter) :
                new ObjectParameter("Fillter", typeof(string));
    
            var storageIdParameter = storageId != null ?
                new ObjectParameter("StorageId", storageId) :
                new ObjectParameter("StorageId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Sync_PhysicalInventoryNotIn_Result>("Proc_Sync_PhysicalInventoryNotIn", locationIdParameter, documentIdParameter, fillterParameter, storageIdParameter);
        }
    
        public virtual int Proc_SyncInsertEod(string lOCATIONID, string tERMINIALID, string eODID, string dOCDATE, string lOAN, string sYSTEMCASH, string aCTUALCASH, string p1, string p5, string p10, string p20, string p50, string p100, string p200, string p500, string cASHDIFF, string cASHCOUNT, string cREDITAMT, string dEBITAMT, string dEBITCNT, string rETURNAMT, string rETURNCNT, string dELETEAMT, string dELETECNT, string oNACCAMT, string oNACCCNT, string cREDITCNT, string cust1Amt)
        {
            var lOCATIONIDParameter = lOCATIONID != null ?
                new ObjectParameter("LOCATIONID", lOCATIONID) :
                new ObjectParameter("LOCATIONID", typeof(string));
    
            var tERMINIALIDParameter = tERMINIALID != null ?
                new ObjectParameter("TERMINIALID", tERMINIALID) :
                new ObjectParameter("TERMINIALID", typeof(string));
    
            var eODIDParameter = eODID != null ?
                new ObjectParameter("EODID", eODID) :
                new ObjectParameter("EODID", typeof(string));
    
            var dOCDATEParameter = dOCDATE != null ?
                new ObjectParameter("DOCDATE", dOCDATE) :
                new ObjectParameter("DOCDATE", typeof(string));
    
            var lOANParameter = lOAN != null ?
                new ObjectParameter("LOAN", lOAN) :
                new ObjectParameter("LOAN", typeof(string));
    
            var sYSTEMCASHParameter = sYSTEMCASH != null ?
                new ObjectParameter("SYSTEMCASH", sYSTEMCASH) :
                new ObjectParameter("SYSTEMCASH", typeof(string));
    
            var aCTUALCASHParameter = aCTUALCASH != null ?
                new ObjectParameter("ACTUALCASH", aCTUALCASH) :
                new ObjectParameter("ACTUALCASH", typeof(string));
    
            var p1Parameter = p1 != null ?
                new ObjectParameter("p1", p1) :
                new ObjectParameter("p1", typeof(string));
    
            var p5Parameter = p5 != null ?
                new ObjectParameter("p5", p5) :
                new ObjectParameter("p5", typeof(string));
    
            var p10Parameter = p10 != null ?
                new ObjectParameter("p10", p10) :
                new ObjectParameter("p10", typeof(string));
    
            var p20Parameter = p20 != null ?
                new ObjectParameter("p20", p20) :
                new ObjectParameter("p20", typeof(string));
    
            var p50Parameter = p50 != null ?
                new ObjectParameter("p50", p50) :
                new ObjectParameter("p50", typeof(string));
    
            var p100Parameter = p100 != null ?
                new ObjectParameter("p100", p100) :
                new ObjectParameter("p100", typeof(string));
    
            var p200Parameter = p200 != null ?
                new ObjectParameter("p200", p200) :
                new ObjectParameter("p200", typeof(string));
    
            var p500Parameter = p500 != null ?
                new ObjectParameter("p500", p500) :
                new ObjectParameter("p500", typeof(string));
    
            var cASHDIFFParameter = cASHDIFF != null ?
                new ObjectParameter("CASHDIFF", cASHDIFF) :
                new ObjectParameter("CASHDIFF", typeof(string));
    
            var cASHCOUNTParameter = cASHCOUNT != null ?
                new ObjectParameter("CASHCOUNT", cASHCOUNT) :
                new ObjectParameter("CASHCOUNT", typeof(string));
    
            var cREDITAMTParameter = cREDITAMT != null ?
                new ObjectParameter("CREDITAMT", cREDITAMT) :
                new ObjectParameter("CREDITAMT", typeof(string));
    
            var dEBITAMTParameter = dEBITAMT != null ?
                new ObjectParameter("DEBITAMT", dEBITAMT) :
                new ObjectParameter("DEBITAMT", typeof(string));
    
            var dEBITCNTParameter = dEBITCNT != null ?
                new ObjectParameter("DEBITCNT", dEBITCNT) :
                new ObjectParameter("DEBITCNT", typeof(string));
    
            var rETURNAMTParameter = rETURNAMT != null ?
                new ObjectParameter("RETURNAMT", rETURNAMT) :
                new ObjectParameter("RETURNAMT", typeof(string));
    
            var rETURNCNTParameter = rETURNCNT != null ?
                new ObjectParameter("RETURNCNT", rETURNCNT) :
                new ObjectParameter("RETURNCNT", typeof(string));
    
            var dELETEAMTParameter = dELETEAMT != null ?
                new ObjectParameter("DELETEAMT", dELETEAMT) :
                new ObjectParameter("DELETEAMT", typeof(string));
    
            var dELETECNTParameter = dELETECNT != null ?
                new ObjectParameter("DELETECNT", dELETECNT) :
                new ObjectParameter("DELETECNT", typeof(string));
    
            var oNACCAMTParameter = oNACCAMT != null ?
                new ObjectParameter("ONACCAMT", oNACCAMT) :
                new ObjectParameter("ONACCAMT", typeof(string));
    
            var oNACCCNTParameter = oNACCCNT != null ?
                new ObjectParameter("ONACCCNT", oNACCCNT) :
                new ObjectParameter("ONACCCNT", typeof(string));
    
            var cREDITCNTParameter = cREDITCNT != null ?
                new ObjectParameter("CREDITCNT", cREDITCNT) :
                new ObjectParameter("CREDITCNT", typeof(string));
    
            var cust1AmtParameter = cust1Amt != null ?
                new ObjectParameter("Cust1Amt", cust1Amt) :
                new ObjectParameter("Cust1Amt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_SyncInsertEod", lOCATIONIDParameter, tERMINIALIDParameter, eODIDParameter, dOCDATEParameter, lOANParameter, sYSTEMCASHParameter, aCTUALCASHParameter, p1Parameter, p5Parameter, p10Parameter, p20Parameter, p50Parameter, p100Parameter, p200Parameter, p500Parameter, cASHDIFFParameter, cASHCOUNTParameter, cREDITAMTParameter, dEBITAMTParameter, dEBITCNTParameter, rETURNAMTParameter, rETURNCNTParameter, dELETEAMTParameter, dELETECNTParameter, oNACCAMTParameter, oNACCCNTParameter, cREDITCNTParameter, cust1AmtParameter);
        }
    
        public virtual int Proc_SyncInsertEoddtls(string lOCATIONID, string tERMINALID, string eODID, string dOCDATE, string tRANSACTIONDATE, string tRANSACTIONTYPE, string tRANSACTIONID, string cOUNT, string pAYTYPE, string aMOUNT)
        {
            var lOCATIONIDParameter = lOCATIONID != null ?
                new ObjectParameter("LOCATIONID", lOCATIONID) :
                new ObjectParameter("LOCATIONID", typeof(string));
    
            var tERMINALIDParameter = tERMINALID != null ?
                new ObjectParameter("TERMINALID", tERMINALID) :
                new ObjectParameter("TERMINALID", typeof(string));
    
            var eODIDParameter = eODID != null ?
                new ObjectParameter("EODID", eODID) :
                new ObjectParameter("EODID", typeof(string));
    
            var dOCDATEParameter = dOCDATE != null ?
                new ObjectParameter("DOCDATE", dOCDATE) :
                new ObjectParameter("DOCDATE", typeof(string));
    
            var tRANSACTIONDATEParameter = tRANSACTIONDATE != null ?
                new ObjectParameter("TRANSACTIONDATE", tRANSACTIONDATE) :
                new ObjectParameter("TRANSACTIONDATE", typeof(string));
    
            var tRANSACTIONTYPEParameter = tRANSACTIONTYPE != null ?
                new ObjectParameter("TRANSACTIONTYPE", tRANSACTIONTYPE) :
                new ObjectParameter("TRANSACTIONTYPE", typeof(string));
    
            var tRANSACTIONIDParameter = tRANSACTIONID != null ?
                new ObjectParameter("TRANSACTIONID", tRANSACTIONID) :
                new ObjectParameter("TRANSACTIONID", typeof(string));
    
            var cOUNTParameter = cOUNT != null ?
                new ObjectParameter("COUNT", cOUNT) :
                new ObjectParameter("COUNT", typeof(string));
    
            var pAYTYPEParameter = pAYTYPE != null ?
                new ObjectParameter("PAYTYPE", pAYTYPE) :
                new ObjectParameter("PAYTYPE", typeof(string));
    
            var aMOUNTParameter = aMOUNT != null ?
                new ObjectParameter("AMOUNT", aMOUNT) :
                new ObjectParameter("AMOUNT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_SyncInsertEoddtls", lOCATIONIDParameter, tERMINALIDParameter, eODIDParameter, dOCDATEParameter, tRANSACTIONDATEParameter, tRANSACTIONTYPEParameter, tRANSACTIONIDParameter, cOUNTParameter, pAYTYPEParameter, aMOUNTParameter);
        }
    
        public virtual ObjectResult<Proc_TempDetailsData_Result> Proc_TempDetailsData(string locationID, string type)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_TempDetailsData_Result>("Proc_TempDetailsData", locationIDParameter, typeParameter);
        }
    
        public virtual int Proc_TempInsertTransferToDsiaplay(Nullable<int> tMID)
        {
            var tMIDParameter = tMID.HasValue ?
                new ObjectParameter("TMID", tMID) :
                new ObjectParameter("TMID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_TempInsertTransferToDsiaplay", tMIDParameter);
        }
    
        public virtual int Proc_TempPhyInventory_Detail(Nullable<int> tMID)
        {
            var tMIDParameter = tMID.HasValue ?
                new ObjectParameter("TMID", tMID) :
                new ObjectParameter("TMID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_TempPhyInventory_Detail", tMIDParameter);
        }
    
        public virtual int Proc_TempPhysicalEntry(Nullable<int> tMID)
        {
            var tMIDParameter = tMID.HasValue ?
                new ObjectParameter("TMID", tMID) :
                new ObjectParameter("TMID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_TempPhysicalEntry", tMIDParameter);
        }
    
        public virtual int Proc_TempPhysicalInventoryDetails(Nullable<int> tMID)
        {
            var tMIDParameter = tMID.HasValue ?
                new ObjectParameter("TMID", tMID) :
                new ObjectParameter("TMID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_TempPhysicalInventoryDetails", tMIDParameter);
        }
    
        public virtual int Proc_TempProductionOrderDetails(Nullable<int> tMID)
        {
            var tMIDParameter = tMID.HasValue ?
                new ObjectParameter("TMID", tMID) :
                new ObjectParameter("TMID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_TempProductionOrderDetails", tMIDParameter);
        }
    
        public virtual int Proc_TempTransfterOUTDetails(Nullable<int> tMID, string toLocationID, string toStorageID)
        {
            var tMIDParameter = tMID.HasValue ?
                new ObjectParameter("TMID", tMID) :
                new ObjectParameter("TMID", typeof(int));
    
            var toLocationIDParameter = toLocationID != null ?
                new ObjectParameter("ToLocationID", toLocationID) :
                new ObjectParameter("ToLocationID", typeof(string));
    
            var toStorageIDParameter = toStorageID != null ?
                new ObjectParameter("ToStorageID", toStorageID) :
                new ObjectParameter("ToStorageID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_TempTransfterOUTDetails", tMIDParameter, toLocationIDParameter, toStorageIDParameter);
        }
    
        public virtual int Proc_TempTransfterToDisplayDetails(Nullable<int> tMID)
        {
            var tMIDParameter = tMID.HasValue ?
                new ObjectParameter("TMID", tMID) :
                new ObjectParameter("TMID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_TempTransfterToDisplayDetails", tMIDParameter);
        }
    
        public virtual ObjectResult<Proc_Terminal_Report_Result> Proc_Terminal_Report()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Terminal_Report_Result>("Proc_Terminal_Report");
        }
    
        public virtual int Proc_TranferDisplay(string documentID, string pONumber, string companyID, string locationID, string storageID, string documentDate, Nullable<System.DateTime> postingDate, string userID, Nullable<System.DateTime> addDate, string docDetals)
        {
            var documentIDParameter = documentID != null ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(string));
    
            var pONumberParameter = pONumber != null ?
                new ObjectParameter("PONumber", pONumber) :
                new ObjectParameter("PONumber", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var storageIDParameter = storageID != null ?
                new ObjectParameter("StorageID", storageID) :
                new ObjectParameter("StorageID", typeof(string));
    
            var documentDateParameter = documentDate != null ?
                new ObjectParameter("DocumentDate", documentDate) :
                new ObjectParameter("DocumentDate", typeof(string));
    
            var postingDateParameter = postingDate.HasValue ?
                new ObjectParameter("PostingDate", postingDate) :
                new ObjectParameter("PostingDate", typeof(System.DateTime));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var addDateParameter = addDate.HasValue ?
                new ObjectParameter("AddDate", addDate) :
                new ObjectParameter("AddDate", typeof(System.DateTime));
    
            var docDetalsParameter = docDetals != null ?
                new ObjectParameter("DocDetals", docDetals) :
                new ObjectParameter("DocDetals", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_TranferDisplay", documentIDParameter, pONumberParameter, companyIDParameter, locationIDParameter, storageIDParameter, documentDateParameter, postingDateParameter, userIDParameter, addDateParameter, docDetalsParameter);
        }
    
        public virtual int Proc_TranferDisplayOUT(string documentID, string pONumber, string companyID, string locationID, string storageID, string documentDate, Nullable<System.DateTime> postingDate, string userID, Nullable<System.DateTime> addDate, string tOStatus, string toLocationID, string docDetail)
        {
            var documentIDParameter = documentID != null ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(string));
    
            var pONumberParameter = pONumber != null ?
                new ObjectParameter("PONumber", pONumber) :
                new ObjectParameter("PONumber", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var storageIDParameter = storageID != null ?
                new ObjectParameter("StorageID", storageID) :
                new ObjectParameter("StorageID", typeof(string));
    
            var documentDateParameter = documentDate != null ?
                new ObjectParameter("DocumentDate", documentDate) :
                new ObjectParameter("DocumentDate", typeof(string));
    
            var postingDateParameter = postingDate.HasValue ?
                new ObjectParameter("PostingDate", postingDate) :
                new ObjectParameter("PostingDate", typeof(System.DateTime));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var addDateParameter = addDate.HasValue ?
                new ObjectParameter("AddDate", addDate) :
                new ObjectParameter("AddDate", typeof(System.DateTime));
    
            var tOStatusParameter = tOStatus != null ?
                new ObjectParameter("TOStatus", tOStatus) :
                new ObjectParameter("TOStatus", typeof(string));
    
            var toLocationIDParameter = toLocationID != null ?
                new ObjectParameter("ToLocationID", toLocationID) :
                new ObjectParameter("ToLocationID", typeof(string));
    
            var docDetailParameter = docDetail != null ?
                new ObjectParameter("DocDetail", docDetail) :
                new ObjectParameter("DocDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_TranferDisplayOUT", documentIDParameter, pONumberParameter, companyIDParameter, locationIDParameter, storageIDParameter, documentDateParameter, postingDateParameter, userIDParameter, addDateParameter, tOStatusParameter, toLocationIDParameter, docDetailParameter);
        }
    
        public virtual int Proc_TransferDisplay_Details(string documentID, string companyID, string locationID, Nullable<System.DateTime> documentDate, Nullable<System.DateTime> postingDate, Nullable<System.DateTime> addDate, Nullable<System.DateTime> updDate, string materialId, string baseQty, string categoryId, string userID, string storageId, string materialMix)
        {
            var documentIDParameter = documentID != null ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var documentDateParameter = documentDate.HasValue ?
                new ObjectParameter("DocumentDate", documentDate) :
                new ObjectParameter("DocumentDate", typeof(System.DateTime));
    
            var postingDateParameter = postingDate.HasValue ?
                new ObjectParameter("PostingDate", postingDate) :
                new ObjectParameter("PostingDate", typeof(System.DateTime));
    
            var addDateParameter = addDate.HasValue ?
                new ObjectParameter("AddDate", addDate) :
                new ObjectParameter("AddDate", typeof(System.DateTime));
    
            var updDateParameter = updDate.HasValue ?
                new ObjectParameter("UpdDate", updDate) :
                new ObjectParameter("UpdDate", typeof(System.DateTime));
    
            var materialIdParameter = materialId != null ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(string));
    
            var baseQtyParameter = baseQty != null ?
                new ObjectParameter("BaseQty", baseQty) :
                new ObjectParameter("BaseQty", typeof(string));
    
            var categoryIdParameter = categoryId != null ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var storageIdParameter = storageId != null ?
                new ObjectParameter("StorageId", storageId) :
                new ObjectParameter("StorageId", typeof(string));
    
            var materialMixParameter = materialMix != null ?
                new ObjectParameter("MaterialMix", materialMix) :
                new ObjectParameter("MaterialMix", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_TransferDisplay_Details", documentIDParameter, companyIDParameter, locationIDParameter, documentDateParameter, postingDateParameter, addDateParameter, updDateParameter, materialIdParameter, baseQtyParameter, categoryIdParameter, userIDParameter, storageIdParameter, materialMixParameter);
        }
    
        public virtual int Proc_TransferDisplay_Ent_In_Out(string documentID, string companyID, string locationID, Nullable<System.DateTime> documentDate, Nullable<System.DateTime> postingDate, Nullable<System.DateTime> addDate, Nullable<System.DateTime> updDate, string materialId, string uOM, string tranQty, string baseQty, string categoryId, string userID, Nullable<decimal> convertFactor, string storageId, string postKey, string materialMix)
        {
            var documentIDParameter = documentID != null ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var documentDateParameter = documentDate.HasValue ?
                new ObjectParameter("DocumentDate", documentDate) :
                new ObjectParameter("DocumentDate", typeof(System.DateTime));
    
            var postingDateParameter = postingDate.HasValue ?
                new ObjectParameter("PostingDate", postingDate) :
                new ObjectParameter("PostingDate", typeof(System.DateTime));
    
            var addDateParameter = addDate.HasValue ?
                new ObjectParameter("AddDate", addDate) :
                new ObjectParameter("AddDate", typeof(System.DateTime));
    
            var updDateParameter = updDate.HasValue ?
                new ObjectParameter("UpdDate", updDate) :
                new ObjectParameter("UpdDate", typeof(System.DateTime));
    
            var materialIdParameter = materialId != null ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var tranQtyParameter = tranQty != null ?
                new ObjectParameter("TranQty", tranQty) :
                new ObjectParameter("TranQty", typeof(string));
    
            var baseQtyParameter = baseQty != null ?
                new ObjectParameter("BaseQty", baseQty) :
                new ObjectParameter("BaseQty", typeof(string));
    
            var categoryIdParameter = categoryId != null ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var convertFactorParameter = convertFactor.HasValue ?
                new ObjectParameter("ConvertFactor", convertFactor) :
                new ObjectParameter("ConvertFactor", typeof(decimal));
    
            var storageIdParameter = storageId != null ?
                new ObjectParameter("StorageId", storageId) :
                new ObjectParameter("StorageId", typeof(string));
    
            var postKeyParameter = postKey != null ?
                new ObjectParameter("PostKey", postKey) :
                new ObjectParameter("PostKey", typeof(string));
    
            var materialMixParameter = materialMix != null ?
                new ObjectParameter("MaterialMix", materialMix) :
                new ObjectParameter("MaterialMix", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_TransferDisplay_Ent_In_Out", documentIDParameter, companyIDParameter, locationIDParameter, documentDateParameter, postingDateParameter, addDateParameter, updDateParameter, materialIdParameter, uOMParameter, tranQtyParameter, baseQtyParameter, categoryIdParameter, userIDParameter, convertFactorParameter, storageIdParameter, postKeyParameter, materialMixParameter);
        }
    
        public virtual int Proc_TransferDisplayOUT_Details(string documentID, string companyID, string locationID, Nullable<System.DateTime> documentDate, Nullable<System.DateTime> postingDate, Nullable<System.DateTime> addDate, Nullable<System.DateTime> updDate, string materialId, string uOM, string tranQty, string baseQty, string categoryId, string userID, Nullable<decimal> convertFactor, string storageId, string postKey, string materialMix, string to_LocationID, string to_StorageID)
        {
            var documentIDParameter = documentID != null ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var documentDateParameter = documentDate.HasValue ?
                new ObjectParameter("DocumentDate", documentDate) :
                new ObjectParameter("DocumentDate", typeof(System.DateTime));
    
            var postingDateParameter = postingDate.HasValue ?
                new ObjectParameter("PostingDate", postingDate) :
                new ObjectParameter("PostingDate", typeof(System.DateTime));
    
            var addDateParameter = addDate.HasValue ?
                new ObjectParameter("AddDate", addDate) :
                new ObjectParameter("AddDate", typeof(System.DateTime));
    
            var updDateParameter = updDate.HasValue ?
                new ObjectParameter("UpdDate", updDate) :
                new ObjectParameter("UpdDate", typeof(System.DateTime));
    
            var materialIdParameter = materialId != null ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var tranQtyParameter = tranQty != null ?
                new ObjectParameter("TranQty", tranQty) :
                new ObjectParameter("TranQty", typeof(string));
    
            var baseQtyParameter = baseQty != null ?
                new ObjectParameter("BaseQty", baseQty) :
                new ObjectParameter("BaseQty", typeof(string));
    
            var categoryIdParameter = categoryId != null ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var convertFactorParameter = convertFactor.HasValue ?
                new ObjectParameter("ConvertFactor", convertFactor) :
                new ObjectParameter("ConvertFactor", typeof(decimal));
    
            var storageIdParameter = storageId != null ?
                new ObjectParameter("StorageId", storageId) :
                new ObjectParameter("StorageId", typeof(string));
    
            var postKeyParameter = postKey != null ?
                new ObjectParameter("PostKey", postKey) :
                new ObjectParameter("PostKey", typeof(string));
    
            var materialMixParameter = materialMix != null ?
                new ObjectParameter("MaterialMix", materialMix) :
                new ObjectParameter("MaterialMix", typeof(string));
    
            var to_LocationIDParameter = to_LocationID != null ?
                new ObjectParameter("To_LocationID", to_LocationID) :
                new ObjectParameter("To_LocationID", typeof(string));
    
            var to_StorageIDParameter = to_StorageID != null ?
                new ObjectParameter("To_StorageID", to_StorageID) :
                new ObjectParameter("To_StorageID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_TransferDisplayOUT_Details", documentIDParameter, companyIDParameter, locationIDParameter, documentDateParameter, postingDateParameter, addDateParameter, updDateParameter, materialIdParameter, uOMParameter, tranQtyParameter, baseQtyParameter, categoryIdParameter, userIDParameter, convertFactorParameter, storageIdParameter, postKeyParameter, materialMixParameter, to_LocationIDParameter, to_StorageIDParameter);
        }
    
        public virtual int Proc_Update_POStatus(string documentId)
        {
            var documentIdParameter = documentId != null ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Update_POStatus", documentIdParameter);
        }
    
        public virtual int Proc_Update_TOStatus(string documentId)
        {
            var documentIdParameter = documentId != null ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Update_TOStatus", documentIdParameter);
        }
    
        public virtual int Proc_UpdateCustomerRegistration(string customerID, string firstName, string lastName, string address, string pOBox, string phone, string fax, string email, string city, string region, string country, Nullable<decimal> creditLimit, string custType, string password, string gender, string dateOfBirth)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var pOBoxParameter = pOBox != null ?
                new ObjectParameter("POBox", pOBox) :
                new ObjectParameter("POBox", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var creditLimitParameter = creditLimit.HasValue ?
                new ObjectParameter("CreditLimit", creditLimit) :
                new ObjectParameter("CreditLimit", typeof(decimal));
    
            var custTypeParameter = custType != null ?
                new ObjectParameter("CustType", custType) :
                new ObjectParameter("CustType", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth != null ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_UpdateCustomerRegistration", customerIDParameter, firstNameParameter, lastNameParameter, addressParameter, pOBoxParameter, phoneParameter, faxParameter, emailParameter, cityParameter, regionParameter, countryParameter, creditLimitParameter, custTypeParameter, passwordParameter, genderParameter, dateOfBirthParameter);
        }
    
        public virtual int proc_UpdateDocId(string locationId, Nullable<long> tfrId)
        {
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            var tfrIdParameter = tfrId.HasValue ?
                new ObjectParameter("TfrId", tfrId) :
                new ObjectParameter("TfrId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_UpdateDocId", locationIdParameter, tfrIdParameter);
        }
    
        public virtual ObjectResult<string> Proc_UpdateEODCash_Collection(string eODID, string cash_Collection)
        {
            var eODIDParameter = eODID != null ?
                new ObjectParameter("EODID", eODID) :
                new ObjectParameter("EODID", typeof(string));
    
            var cash_CollectionParameter = cash_Collection != null ?
                new ObjectParameter("Cash_Collection", cash_Collection) :
                new ObjectParameter("Cash_Collection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Proc_UpdateEODCash_Collection", eODIDParameter, cash_CollectionParameter);
        }
    
        public virtual int Proc_UpdateMasterCategory(string categoryID, string categoryDesc)
        {
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            var categoryDescParameter = categoryDesc != null ?
                new ObjectParameter("CategoryDesc", categoryDesc) :
                new ObjectParameter("CategoryDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_UpdateMasterCategory", categoryIDParameter, categoryDescParameter);
        }
    
        public virtual int Proc_UpdateMasterLocation(string locationID, string costCenter, string name, string address1, string address2, string address3, string pOBOX, string postalCode, string city, string region, string country, string contactPerson, string telePhone, string fax, string lan, Nullable<decimal> loanAmount)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("CostCenter", costCenter) :
                new ObjectParameter("CostCenter", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var address3Parameter = address3 != null ?
                new ObjectParameter("Address3", address3) :
                new ObjectParameter("Address3", typeof(string));
    
            var pOBOXParameter = pOBOX != null ?
                new ObjectParameter("POBOX", pOBOX) :
                new ObjectParameter("POBOX", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var contactPersonParameter = contactPerson != null ?
                new ObjectParameter("ContactPerson", contactPerson) :
                new ObjectParameter("ContactPerson", typeof(string));
    
            var telePhoneParameter = telePhone != null ?
                new ObjectParameter("TelePhone", telePhone) :
                new ObjectParameter("TelePhone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var lanParameter = lan != null ?
                new ObjectParameter("Lan", lan) :
                new ObjectParameter("Lan", typeof(string));
    
            var loanAmountParameter = loanAmount.HasValue ?
                new ObjectParameter("LoanAmount", loanAmount) :
                new ObjectParameter("LoanAmount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_UpdateMasterLocation", locationIDParameter, costCenterParameter, nameParameter, address1Parameter, address2Parameter, address3Parameter, pOBOXParameter, postalCodeParameter, cityParameter, regionParameter, countryParameter, contactPersonParameter, telePhoneParameter, faxParameter, lanParameter, loanAmountParameter);
        }
    
        public virtual int Proc_UpdateMasterMaterial(string materialId, string materialDesc, string materialDescArbirc, string categoryId, string subCategory, string url, string vendorId, string baseUOM, Nullable<decimal> cost, string userId)
        {
            var materialIdParameter = materialId != null ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(string));
    
            var materialDescParameter = materialDesc != null ?
                new ObjectParameter("MaterialDesc", materialDesc) :
                new ObjectParameter("MaterialDesc", typeof(string));
    
            var materialDescArbircParameter = materialDescArbirc != null ?
                new ObjectParameter("MaterialDescArbirc", materialDescArbirc) :
                new ObjectParameter("MaterialDescArbirc", typeof(string));
    
            var categoryIdParameter = categoryId != null ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(string));
    
            var subCategoryParameter = subCategory != null ?
                new ObjectParameter("SubCategory", subCategory) :
                new ObjectParameter("SubCategory", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var vendorIdParameter = vendorId != null ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(string));
    
            var baseUOMParameter = baseUOM != null ?
                new ObjectParameter("BaseUOM", baseUOM) :
                new ObjectParameter("BaseUOM", typeof(string));
    
            var costParameter = cost.HasValue ?
                new ObjectParameter("Cost", cost) :
                new ObjectParameter("Cost", typeof(decimal));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_UpdateMasterMaterial", materialIdParameter, materialDescParameter, materialDescArbircParameter, categoryIdParameter, subCategoryParameter, urlParameter, vendorIdParameter, baseUOMParameter, costParameter, userIdParameter);
        }
    
        public virtual int Proc_UpdateMasterStorage(string storageId, string storageName, string locationID)
        {
            var storageIdParameter = storageId != null ?
                new ObjectParameter("StorageId", storageId) :
                new ObjectParameter("StorageId", typeof(string));
    
            var storageNameParameter = storageName != null ?
                new ObjectParameter("StorageName", storageName) :
                new ObjectParameter("StorageName", typeof(string));
    
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_UpdateMasterStorage", storageIdParameter, storageNameParameter, locationIDParameter);
        }
    
        public virtual int Proc_updateMasterSubCategory(string categoryID, string subCategoryName, string subCategoryId)
        {
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            var subCategoryNameParameter = subCategoryName != null ?
                new ObjectParameter("SubCategoryName", subCategoryName) :
                new ObjectParameter("SubCategoryName", typeof(string));
    
            var subCategoryIdParameter = subCategoryId != null ?
                new ObjectParameter("SubCategoryId", subCategoryId) :
                new ObjectParameter("SubCategoryId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_updateMasterSubCategory", categoryIDParameter, subCategoryNameParameter, subCategoryIdParameter);
        }
    
        public virtual int Proc_UpdateMasterTerminal(string locationID, string terminalId)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var terminalIdParameter = terminalId != null ?
                new ObjectParameter("TerminalId", terminalId) :
                new ObjectParameter("TerminalId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_UpdateMasterTerminal", locationIDParameter, terminalIdParameter);
        }
    
        public virtual int Proc_UpdateMasterVendor(string vendorID, string name, string address1, string address2, string address3, string pOBOX, string postalCode, string city, string region, string country, string contactPerson, string telePhone, string fax, string lan)
        {
            var vendorIDParameter = vendorID != null ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var address3Parameter = address3 != null ?
                new ObjectParameter("Address3", address3) :
                new ObjectParameter("Address3", typeof(string));
    
            var pOBOXParameter = pOBOX != null ?
                new ObjectParameter("POBOX", pOBOX) :
                new ObjectParameter("POBOX", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var contactPersonParameter = contactPerson != null ?
                new ObjectParameter("ContactPerson", contactPerson) :
                new ObjectParameter("ContactPerson", typeof(string));
    
            var telePhoneParameter = telePhone != null ?
                new ObjectParameter("TelePhone", telePhone) :
                new ObjectParameter("TelePhone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var lanParameter = lan != null ?
                new ObjectParameter("Lan", lan) :
                new ObjectParameter("Lan", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_UpdateMasterVendor", vendorIDParameter, nameParameter, address1Parameter, address2Parameter, address3Parameter, pOBOXParameter, postalCodeParameter, cityParameter, regionParameter, countryParameter, contactPersonParameter, telePhoneParameter, faxParameter, lanParameter);
        }
    
        public virtual int proc_UpdatePhyCount(string locationId, string phyCount)
        {
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            var phyCountParameter = phyCount != null ?
                new ObjectParameter("PhyCount", phyCount) :
                new ObjectParameter("PhyCount", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_UpdatePhyCount", locationIdParameter, phyCountParameter);
        }
    
        public virtual int Proc_UpdatePhyInentoryStatus(string documentId, string locationId)
        {
            var documentIdParameter = documentId != null ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(string));
    
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_UpdatePhyInentoryStatus", documentIdParameter, locationIdParameter);
        }
    
        public virtual int Proc_UpdateProductionOrder_ID(string locationID)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_UpdateProductionOrder_ID", locationIDParameter);
        }
    
        public virtual int Proc_UpdateProductionOrderRequestDetail(string iD, string quantity, string filter)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var quantityParameter = quantity != null ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_UpdateProductionOrderRequestDetail", iDParameter, quantityParameter, filterParameter);
        }
    
        public virtual int proc_UpdateRtnVendorId(string locationId, Nullable<long> rtnVendorId)
        {
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            var rtnVendorIdParameter = rtnVendorId.HasValue ?
                new ObjectParameter("RtnVendorId", rtnVendorId) :
                new ObjectParameter("RtnVendorId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_UpdateRtnVendorId", locationIdParameter, rtnVendorIdParameter);
        }
    
        public virtual int proc_UpdateTranfterOUTDocId(string locationId, Nullable<long> tfrout)
        {
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            var tfroutParameter = tfrout.HasValue ?
                new ObjectParameter("Tfrout", tfrout) :
                new ObjectParameter("Tfrout", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_UpdateTranfterOUTDocId", locationIdParameter, tfroutParameter);
        }
    
        public virtual int procInsert_Category(string categoryID, string categoryDesc)
        {
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            var categoryDescParameter = categoryDesc != null ?
                new ObjectParameter("CategoryDesc", categoryDesc) :
                new ObjectParameter("CategoryDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procInsert_Category", categoryIDParameter, categoryDescParameter);
        }
    
        public virtual ObjectResult<string> procSearch_Category(string categoryID)
        {
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("procSearch_Category", categoryIDParameter);
        }
    
        public virtual ObjectResult<procSelect_Category_Result> procSelect_Category()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procSelect_Category_Result>("procSelect_Category");
        }
    
        public virtual int procUpdate_Category(string categoryID, string categoryDesc)
        {
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            var categoryDescParameter = categoryDesc != null ?
                new ObjectParameter("CategoryDesc", categoryDesc) :
                new ObjectParameter("CategoryDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procUpdate_Category", categoryIDParameter, categoryDescParameter);
        }
    
        public virtual int pxAcceptTransaction(Nullable<int> tMID)
        {
            var tMIDParameter = tMID.HasValue ?
                new ObjectParameter("TMID", tMID) :
                new ObjectParameter("TMID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pxAcceptTransaction", tMIDParameter);
        }
    
        public virtual ObjectResult<pxSelectCategoryPieChart_Result> pxSelectCategoryPieChart()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectCategoryPieChart_Result>("pxSelectCategoryPieChart");
        }
    
        public virtual ObjectResult<pxSelectDeleteDocumentMaterial_Result> pxSelectDeleteDocumentMaterial(string dOCID)
        {
            var dOCIDParameter = dOCID != null ?
                new ObjectParameter("DOCID", dOCID) :
                new ObjectParameter("DOCID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectDeleteDocumentMaterial_Result>("pxSelectDeleteDocumentMaterial", dOCIDParameter);
        }
    
        public virtual ObjectResult<pxSelectDeleteDocumentTender_Result> pxSelectDeleteDocumentTender(string dOCID)
        {
            var dOCIDParameter = dOCID != null ?
                new ObjectParameter("DOCID", dOCID) :
                new ObjectParameter("DOCID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectDeleteDocumentTender_Result>("pxSelectDeleteDocumentTender", dOCIDParameter);
        }
    
        public virtual ObjectResult<pxSelectDocumentMaterial_Result> pxSelectDocumentMaterial(string dOCID)
        {
            var dOCIDParameter = dOCID != null ?
                new ObjectParameter("DOCID", dOCID) :
                new ObjectParameter("DOCID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectDocumentMaterial_Result>("pxSelectDocumentMaterial", dOCIDParameter);
        }
    
        public virtual ObjectResult<pxSelectDocumentTender_Result> pxSelectDocumentTender(string dOCID)
        {
            var dOCIDParameter = dOCID != null ?
                new ObjectParameter("DOCID", dOCID) :
                new ObjectParameter("DOCID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectDocumentTender_Result>("pxSelectDocumentTender", dOCIDParameter);
        }
    
        public virtual ObjectResult<pxSelectFilterEodEnquiry_Result> pxSelectFilterEodEnquiry(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string terminalIDs, string materialID, string eAN, string category, string subCategory, string userID, string amountFrom, string amountTo, string location)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            var terminalIDsParameter = terminalIDs != null ?
                new ObjectParameter("TerminalIDs", terminalIDs) :
                new ObjectParameter("TerminalIDs", typeof(string));
    
            var materialIDParameter = materialID != null ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(string));
    
            var eANParameter = eAN != null ?
                new ObjectParameter("EAN", eAN) :
                new ObjectParameter("EAN", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var subCategoryParameter = subCategory != null ?
                new ObjectParameter("SubCategory", subCategory) :
                new ObjectParameter("SubCategory", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var amountFromParameter = amountFrom != null ?
                new ObjectParameter("AmountFrom", amountFrom) :
                new ObjectParameter("AmountFrom", typeof(string));
    
            var amountToParameter = amountTo != null ?
                new ObjectParameter("AmountTo", amountTo) :
                new ObjectParameter("AmountTo", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectFilterEodEnquiry_Result>("pxSelectFilterEodEnquiry", dateFromParameter, dateToParameter, terminalIDsParameter, materialIDParameter, eANParameter, categoryParameter, subCategoryParameter, userIDParameter, amountFromParameter, amountToParameter, locationParameter);
        }
    
        public virtual ObjectResult<pxSelectFilterReturnWithInvoice_Result> pxSelectFilterReturnWithInvoice(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string terminalIDs, string materialID, string eAN, string category, string subCategory, string userID, string amountFrom, string amountTo, string location)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            var terminalIDsParameter = terminalIDs != null ?
                new ObjectParameter("TerminalIDs", terminalIDs) :
                new ObjectParameter("TerminalIDs", typeof(string));
    
            var materialIDParameter = materialID != null ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(string));
    
            var eANParameter = eAN != null ?
                new ObjectParameter("EAN", eAN) :
                new ObjectParameter("EAN", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var subCategoryParameter = subCategory != null ?
                new ObjectParameter("SubCategory", subCategory) :
                new ObjectParameter("SubCategory", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var amountFromParameter = amountFrom != null ?
                new ObjectParameter("AmountFrom", amountFrom) :
                new ObjectParameter("AmountFrom", typeof(string));
    
            var amountToParameter = amountTo != null ?
                new ObjectParameter("AmountTo", amountTo) :
                new ObjectParameter("AmountTo", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectFilterReturnWithInvoice_Result>("pxSelectFilterReturnWithInvoice", dateFromParameter, dateToParameter, terminalIDsParameter, materialIDParameter, eANParameter, categoryParameter, subCategoryParameter, userIDParameter, amountFromParameter, amountToParameter, locationParameter);
        }
    
        public virtual ObjectResult<pxSelectFilterReturnWithoutInvoice_Result> pxSelectFilterReturnWithoutInvoice(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string terminalIDs, string materialID, string eAN, string category, string subCategory, string userID, string amountFrom, string amountTo, string location)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            var terminalIDsParameter = terminalIDs != null ?
                new ObjectParameter("TerminalIDs", terminalIDs) :
                new ObjectParameter("TerminalIDs", typeof(string));
    
            var materialIDParameter = materialID != null ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(string));
    
            var eANParameter = eAN != null ?
                new ObjectParameter("EAN", eAN) :
                new ObjectParameter("EAN", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var subCategoryParameter = subCategory != null ?
                new ObjectParameter("SubCategory", subCategory) :
                new ObjectParameter("SubCategory", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var amountFromParameter = amountFrom != null ?
                new ObjectParameter("AmountFrom", amountFrom) :
                new ObjectParameter("AmountFrom", typeof(string));
    
            var amountToParameter = amountTo != null ?
                new ObjectParameter("AmountTo", amountTo) :
                new ObjectParameter("AmountTo", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectFilterReturnWithoutInvoice_Result>("pxSelectFilterReturnWithoutInvoice", dateFromParameter, dateToParameter, terminalIDsParameter, materialIDParameter, eANParameter, categoryParameter, subCategoryParameter, userIDParameter, amountFromParameter, amountToParameter, locationParameter);
        }
    
        public virtual ObjectResult<pxSelectFilterSalesDeleteLineItemsEnquiry_Result> pxSelectFilterSalesDeleteLineItemsEnquiry(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string terminalIDs, string materialID, string eAN, string category, string subCategory, string userID, string amountFrom, string amountTo, string location)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            var terminalIDsParameter = terminalIDs != null ?
                new ObjectParameter("TerminalIDs", terminalIDs) :
                new ObjectParameter("TerminalIDs", typeof(string));
    
            var materialIDParameter = materialID != null ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(string));
    
            var eANParameter = eAN != null ?
                new ObjectParameter("EAN", eAN) :
                new ObjectParameter("EAN", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var subCategoryParameter = subCategory != null ?
                new ObjectParameter("SubCategory", subCategory) :
                new ObjectParameter("SubCategory", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var amountFromParameter = amountFrom != null ?
                new ObjectParameter("AmountFrom", amountFrom) :
                new ObjectParameter("AmountFrom", typeof(string));
    
            var amountToParameter = amountTo != null ?
                new ObjectParameter("AmountTo", amountTo) :
                new ObjectParameter("AmountTo", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectFilterSalesDeleteLineItemsEnquiry_Result>("pxSelectFilterSalesDeleteLineItemsEnquiry", dateFromParameter, dateToParameter, terminalIDsParameter, materialIDParameter, eANParameter, categoryParameter, subCategoryParameter, userIDParameter, amountFromParameter, amountToParameter, locationParameter);
        }
    
        public virtual ObjectResult<pxSelectFilterSalesEnquiry_Result> pxSelectFilterSalesEnquiry(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string terminalIDs, string materialID, string eAN, string category, string subCategory, string userID, string amountFrom, string amountTo, string location)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            var terminalIDsParameter = terminalIDs != null ?
                new ObjectParameter("TerminalIDs", terminalIDs) :
                new ObjectParameter("TerminalIDs", typeof(string));
    
            var materialIDParameter = materialID != null ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(string));
    
            var eANParameter = eAN != null ?
                new ObjectParameter("EAN", eAN) :
                new ObjectParameter("EAN", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var subCategoryParameter = subCategory != null ?
                new ObjectParameter("SubCategory", subCategory) :
                new ObjectParameter("SubCategory", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var amountFromParameter = amountFrom != null ?
                new ObjectParameter("AmountFrom", amountFrom) :
                new ObjectParameter("AmountFrom", typeof(string));
    
            var amountToParameter = amountTo != null ?
                new ObjectParameter("AmountTo", amountTo) :
                new ObjectParameter("AmountTo", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectFilterSalesEnquiry_Result>("pxSelectFilterSalesEnquiry", dateFromParameter, dateToParameter, terminalIDsParameter, materialIDParameter, eANParameter, categoryParameter, subCategoryParameter, userIDParameter, amountFromParameter, amountToParameter, locationParameter);
        }
    
        public virtual ObjectResult<pxSelectFilterSalesUnHoldEnquiry_Result> pxSelectFilterSalesUnHoldEnquiry(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string terminalIDs, string materialID, string eAN, string category, string subCategory, string userID, string amountFrom, string amountTo, string location)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            var terminalIDsParameter = terminalIDs != null ?
                new ObjectParameter("TerminalIDs", terminalIDs) :
                new ObjectParameter("TerminalIDs", typeof(string));
    
            var materialIDParameter = materialID != null ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(string));
    
            var eANParameter = eAN != null ?
                new ObjectParameter("EAN", eAN) :
                new ObjectParameter("EAN", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var subCategoryParameter = subCategory != null ?
                new ObjectParameter("SubCategory", subCategory) :
                new ObjectParameter("SubCategory", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var amountFromParameter = amountFrom != null ?
                new ObjectParameter("AmountFrom", amountFrom) :
                new ObjectParameter("AmountFrom", typeof(string));
    
            var amountToParameter = amountTo != null ?
                new ObjectParameter("AmountTo", amountTo) :
                new ObjectParameter("AmountTo", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectFilterSalesUnHoldEnquiry_Result>("pxSelectFilterSalesUnHoldEnquiry", dateFromParameter, dateToParameter, terminalIDsParameter, materialIDParameter, eANParameter, categoryParameter, subCategoryParameter, userIDParameter, amountFromParameter, amountToParameter, locationParameter);
        }
    
        public virtual ObjectResult<pxSelectLatestSalesDetails_Result> pxSelectLatestSalesDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectLatestSalesDetails_Result>("pxSelectLatestSalesDetails");
        }
    
        public virtual ObjectResult<pxSelectPhysicalDocument_Result> pxSelectPhysicalDocument()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectPhysicalDocument_Result>("pxSelectPhysicalDocument");
        }
    
        public virtual ObjectResult<pxSelectPORecieve_Result> pxSelectPORecieve()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectPORecieve_Result>("pxSelectPORecieve");
        }
    
        public virtual ObjectResult<pxSelectPORecieveMaterial_Result> pxSelectPORecieveMaterial(string filterName, string dOCID)
        {
            var filterNameParameter = filterName != null ?
                new ObjectParameter("FilterName", filterName) :
                new ObjectParameter("FilterName", typeof(string));
    
            var dOCIDParameter = dOCID != null ?
                new ObjectParameter("DOCID", dOCID) :
                new ObjectParameter("DOCID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectPORecieveMaterial_Result>("pxSelectPORecieveMaterial", filterNameParameter, dOCIDParameter);
        }
    
        public virtual ObjectResult<pxSelectPurchaseOrderDetailByDocId_Result> pxSelectPurchaseOrderDetailByDocId(string dOCID)
        {
            var dOCIDParameter = dOCID != null ?
                new ObjectParameter("DOCID", dOCID) :
                new ObjectParameter("DOCID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectPurchaseOrderDetailByDocId_Result>("pxSelectPurchaseOrderDetailByDocId", dOCIDParameter);
        }
    
        public virtual ObjectResult<pxSelectReturnSalesWithInvoice_Result> pxSelectReturnSalesWithInvoice()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectReturnSalesWithInvoice_Result>("pxSelectReturnSalesWithInvoice");
        }
    
        public virtual ObjectResult<pxSelectReturnSalesWithoutInvoice_Result> pxSelectReturnSalesWithoutInvoice()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectReturnSalesWithoutInvoice_Result>("pxSelectReturnSalesWithoutInvoice");
        }
    
        public virtual ObjectResult<pxSelectReturnToSupplier_Result> pxSelectReturnToSupplier()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectReturnToSupplier_Result>("pxSelectReturnToSupplier");
        }
    
        public virtual ObjectResult<pxSelectSalesDelete_Result> pxSelectSalesDelete()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectSalesDelete_Result>("pxSelectSalesDelete");
        }
    
        public virtual ObjectResult<pxSelectSalesEnquiry_Result> pxSelectSalesEnquiry()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectSalesEnquiry_Result>("pxSelectSalesEnquiry");
        }
    
        public virtual ObjectResult<pxSelectSalesUnHoldEnquiry_Result> pxSelectSalesUnHoldEnquiry()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectSalesUnHoldEnquiry_Result>("pxSelectSalesUnHoldEnquiry");
        }
    
        public virtual ObjectResult<pxSelectTranfterOUTDetailByDocId_Result> pxSelectTranfterOUTDetailByDocId(string dOCID)
        {
            var dOCIDParameter = dOCID != null ?
                new ObjectParameter("DOCID", dOCID) :
                new ObjectParameter("DOCID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectTranfterOUTDetailByDocId_Result>("pxSelectTranfterOUTDetailByDocId", dOCIDParameter);
        }
    
        public virtual ObjectResult<pxSelectTransferDocument_Result> pxSelectTransferDocument()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectTransferDocument_Result>("pxSelectTransferDocument");
        }
    
        public virtual ObjectResult<pxSelectTransfterIN_Result> pxSelectTransfterIN()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectTransfterIN_Result>("pxSelectTransfterIN");
        }
    
        public virtual ObjectResult<pxSelectTransfterOUT_Result> pxSelectTransfterOUT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pxSelectTransfterOUT_Result>("pxSelectTransfterOUT");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Proc_REPORTProductionOrderStatus_Result> Proc_REPORTProductionOrderStatus(string locationID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_REPORTProductionOrderStatus_Result>("Proc_REPORTProductionOrderStatus", locationIDParameter, fromDateParameter, toDateParameter);
        }
    }
}
