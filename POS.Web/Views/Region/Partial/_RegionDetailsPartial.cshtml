@using POS.Entity.Entities;
@using POS.Util.Model;
@model RegionModel

<script type="text/javascript">
    function Success(data) {
        alert(data);
        window.location.reload();
    }
</script>

@{ string disabled = string.Empty;}
@if (Model != null)
{
    if (!string.IsNullOrEmpty(Model.RegionName))
    {
        disabled = "disabled";
        <div class="mrg_left_5per"><h3>Update "@Model.RegionName" Details</h3> </div>
    }
    else
    {
        <div class="mrg_left_5per"><span class="font_med">Add New Region</span></div>
    }
}
else
{
    <div class="mrg_left_5per"><h3>Add New Region</h3></div>
}
@using (Ajax.BeginForm("InsertOrUpdateRegion", "Region", new AjaxOptions
{
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "updatedMessage",
    LoadingElementId = "loader",
    OnSuccess= "Success(data)"
}))
{
    <div class="col-lg-12">
        <div class="col-lg-12 pad_2per">
            <div class="col-lg-12 pad_1perdiv spn_lebl">
                <div class="col-lg-12"><div class="col-lg-3"><span>Region ID :</span></div><div class="col-lg-6">@Html.TextBoxFor(e => e.RegionID, new { @class = "form-control" })</div>@Html.ValidationMessageFor(e => e.RegionID, null, new { @class = "err_mgs" })</div>
                <div class="col-lg-12"> <div class="col-lg-3"><span>Region Name :</span> </div><div class="col-lg-6">@Html.TextBoxFor(e => e.RegionName, new { @class = "form-control" })</div>@Html.ValidationMessageFor(e => e.RegionName, null, new { @class = "err_mgs" })</div>
            </div>

            <div class="col-lg-12">
                <div class="col-lg-3"><h5></h5></div>
                <div class="btn-group-lg" role="group" aria-label="Large button group">
                    <div class="col-lg-1"><input type="submit" class="btn btn-default btn_inpt_sumbit" value="Save" /></div>
                    <div class="col-lg-1"><button type="button" class="btn btn-danger btn_inpt_cancel">Cancel</button></div>
                </div>
            </div>
        </div>
    </div>
}

